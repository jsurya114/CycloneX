<!DOCTYPE HTML>
<html lang="en">
<%- include('partials/head') %>
<body>
  <div class="screen-overlay"></div>
  <aside class="navbar-aside" id="offcanvas_aside">
    <div class="aside-top">
      <a href="" class="brand-wrap">
        <img src="/backend/imgs/logos/cyclonelogo.png" class="logo" alt="CycloneX Dashboard">
      </a>
      <div>
        <button class="btn btn-icon btn-aside-minimize">
          <i class="text-muted material-icons md-menu_open"></i>
        </button>
      </div>
    </div>
    <nav>
      <ul class="menu-aside">
        <li class="menu-item ">
          <a class="menu-link" href="/admin/dashboard">
            <i class="icon material-icons md-home"></i>
            <span class="text">Dashboard</span>
          </a>
        </li>
        <li class="menu-item ">
          <a class="menu-link" href="/admin/product-list2">
            <i class="icon material-icons md-shopping_bag"></i>
            <span class="text">Products</span>
          </a>
        </li>
        <!-- <li class="menu-item ">
          <a class="menu-link" href="/admin/addproduct">
            <i class="icon material-icons md-add_box"></i>
            <span class="text">Add product</span>
          </a>
        </li> -->
        <li class="menu-item active">
          <a class="menu-link" href="/admin/category">
            <i class="icon material-icons md-category"></i>
            <span class="text">Category</span>
          </a>
        </li>
        <li class="menu-item">
          <a class="menu-link" href="/admin/brands">
            <i class="icon material-icons md-stars"></i>
            <span class="text">Brands</span>
          </a>
        </li>
      </ul>
      <hr>
      <ul class="menu-aside">
        <li class="menu-item has-submenu">
          <a class="menu-link" href="page-settings-1.html">
            <i class="icon material-icons md-settings"></i>
            <span class="text">Settings</span>
          </a>
        </li>
      </ul>
      <br><br>
    </nav>
  </aside>
  <main class="main-wrap">
    <%- include('partials/header') %>
    <section class="content-main">
      <div class="content-header">
        <div>
          <h2 class="content-title card-title">Categories</h2>
          <p>Add, edit or delete a category</p>
        </div>
        <div>
          <input type="text" placeholder="Search Categories" class="form-control bg-white">
        </div>
      </div>
      <div class="card">
        <div class="card-body">
          <!-- Delete Selected Button -->
          <div class="mb-3">
            <button id="deleteSelectedBtn" class="btn btn-danger">Delete Selected</button>
          </div>
          <div class="row">
            <!-- Add Category Form -->
            <div class="col-md-3">
              <form id="addCategoryForm" enctype="multipart/form-data">
                <div class="mb-4">
                  <label for="product_name" class="form-label">Name</label>
                  <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" required />
                </div>
                <div class="mb-4">
                  <label for="product_slug" class="form-label">Slug</label>
                  <input type="text" name="slug" placeholder="Type here" class="form-control" id="product_slug" required />
                </div>
                <div class="mb-4">
                  <label class="form-label">Description</label>
                  <textarea name="description" placeholder="Type here" class="form-control" required></textarea>
                </div>
                <div class="mb-4">
                  <label class="form-label">Image</label>
                  <input type="file" name="image" class="form-control" required />
                </div>
                <div class="d-grid">
                  <button type="submit" class="btn btn-primary">Create Category</button>
                </div>
              </form>
            </div>
            <!-- Categories Table -->
            <div class="col-md-9">
              <div class="table-responsive">
                <table class="table table-hover">
                  <thead>
                    <tr>
                      <th class="text-center">
                        <div class="form-check">
                          <!-- "Select All" checkbox for deletion -->
                          <input class="form-check-input delete-checkbox-all" type="checkbox" />
                        </div>
                      </th>
                      <th>Name</th>
                      <th>Description</th>
                      <th>Slug</th>
                      <th>Image</th>
                      <th class="text-end">Action</th>
                      <th>Status</th>
                      <th>Listing</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% category.forEach(category => { %>
                      <tr>
                        <td class="text-center">
                          <div class="form-check">
                            <!-- Each deletion checkbox has a data-id -->
                            <input class="form-check-input delete-checkbox" type="checkbox" data-id="<%= category._id %>" />
                          </div>
                        </td>
                        <td><b><%= category.name %></b></td>
                        <td><%= category.description %></td>
                        <td><%= category.slug %></td>
                        <td>
                          <img src="<%= category.image %>" alt="<%= category.name %>" style="width: 50px; height: 50px; object-fit: cover;">
                        </td>
                        <td class="text-end">
                          <!-- <a href="/admin/category/edit/<%= category._id %>" > <i class="fas fa-pencil-alt text-primary"></i></a> -->
                          <a href="/admin/category/edit/<%= category._id %>" class="edit-category" data-id="<%= category._id %>" data-name="<%= category.name %>" data-slug="<%= category.slug %>" data-description="<%= category.description %>">
                            <i class="fas fa-pencil-alt text-primary"></i>
                          </a>
                          
                        </td>
                        <td>
                          <span class="badge status-badge <%= category.isBlocked ? 'bg-danger' : 'bg-success' %>">
                              <%= category.isDeleted ? 'Deactive' : 'Active' %>
                          </span>
                      </td>
                      <td>
                        <div class="form-check form-switch">
                            <input class="form-check-input toggle-status" type="checkbox" 
                                data-id="<%= category._id %>"
                                <%= category.isBlocked ? '' : 'checked' %>>
                        </div>
                    </td>
                      </tr>
                    <% }) %>
                  </tbody>
                </table>
              </div>
            </div> <!-- .col// -->
          </div> <!-- .row // -->
        </div> <!-- card body .// -->
      </div> <!-- card .// -->
    </section> <!-- content-main end// -->
    <%- include('partials/footer') %>
  </main>
  
  <!-- Include SweetAlert2 script from CDN -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <%- include('partials/scripts') %>
  <script>
    // Handle form submission for adding a category using fetch
    document.getElementById('addCategoryForm').addEventListener('submit', async function (e) {
      e.preventDefault(); // Prevent default form submission
      const formData = new FormData(this); // Create FormData from the form
      try {
        console.log('invoked cat fetch log');
        const response = await fetch('/admin/category/add', {
          method: 'POST',
          body: formData
        });
        const data = await response.json();
        if (response.ok && data.success) {
          Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: data.message,
            confirmButtonText: 'OK'
          }).then(() => {
            location.reload();
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: data.message,
            confirmButtonText: 'OK'
          });
        }
      } catch (error) {
        console.error('Error:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error!',
          text: 'An error occurred. Please try again.',
          confirmButtonText: 'OK'
        });
      }
    });
    
    // Handle toggle functionality for blocking/unblocking categories
    document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('.toggle-status').forEach(switchElement => {
                switchElement.addEventListener('change', async (event) => {
                    const category = event.target.dataset.id;
                    const isChecked = event.target.checked;
                    const statusBadge = event.target.closest('tr').querySelector('.status-badge');

                    const result = await Swal.fire({
                        title: isChecked ? 'Activate Product?' : 'Unlist this Product?',
                        text: isChecked ? "You can unlist it anytime." : "You can list it anytime.",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, continue',
                        cancelButtonText: 'Cancel'
                    });

                    if (result.isConfirmed) {
                        try {
                            const response = await fetch(`/admin/listing/${category}`, {
                                method: 'PUT',
                                headers: { 'Content-Type': 'application/json' }
                            });

                            const data = await response.json();
                            if (data.success) {
                                Swal.fire('Updated!', data.message, 'success');

                                // Update status badge dynamically
                                if (statusBadge) {
                                    statusBadge.textContent = isChecked ? 'Active' : 'Deactive';
                                    statusBadge.classList.toggle('bg-success', isChecked);
                                    statusBadge.classList.toggle('bg-danger', !isChecked);
                                }
                            } else {
                                Swal.fire('Error', data.message, 'error');
                                event.target.checked = !isChecked;
                            }
                        } catch (error) {
                            console.error(error);
                            Swal.fire('Error', 'Something went wrong', 'error')
                            event.target.checked = !isChecked
                        }
                    } else {
                        event.target.checked = !isChecked
                    }
                });
            });
        });
    // Handle "Select All" functionality for deletion checkboxes
    document.querySelector('.delete-checkbox-all').addEventListener('change', function () {
      const isChecked = this.checked;
      document.querySelectorAll('.delete-checkbox').forEach(cb => {
        cb.checked = isChecked;
      });
    });
    
    // Handle "Delete Selected" functionality
    document.getElementById('deleteSelectedBtn').addEventListener('click', async function () {
      // Get all checked deletion checkboxes
      const selectedCheckboxes = document.querySelectorAll('.delete-checkbox:checked:not(:disabled)');
      if (selectedCheckboxes.length === 0) {
        Swal.fire({
          icon: 'warning',
          title: 'No Selection',
          text: 'Please select at least one category to delete.',
          confirmButtonText: 'OK'
        });
        return;
      }
      // Collect the category IDs from the checkboxes
      const ids = Array.from(selectedCheckboxes).map(cb => cb.getAttribute('data-id'));
      Swal.fire({
        title: 'Confirm Deletion',
        text: 'Are you sure you want to delete the selected categories?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, delete them!',
        cancelButtonText: 'Cancel'
      }).then(async (result) => {
        if (result.isConfirmed) {
          try {
            const response = await fetch('/admin/category/delete', {
              method: 'DELETE',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ ids })
            });
            const data = await response.json();
            if (response.ok && data.success) {
              Swal.fire({
                icon: 'success',
                title: 'Deleted!',
                text: data.message,
                confirmButtonText: 'OK'
              }).then(() => {
                location.reload();
              });
            } else {
              Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: data.message,
                confirmButtonText: 'OK'
              });
            }
          } catch (error) {
            console.error('Error:', error);
            Swal.fire({
              icon: 'error',
              title: 'Error!',
              text: 'An error occurred. Please try again.',
              confirmButtonText: 'OK'
            });
          }
        }
      });
    });
  </script>
</body>
</html>
