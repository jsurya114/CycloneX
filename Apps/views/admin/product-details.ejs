
<!DOCTYPE HTML>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CycloneX - Product Details</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    colors: {
                        primary: {
                            50: '#f0f9ff',
                            100: '#e0f2fe',
                            200: '#bae6fd',
                            300: '#7dd3fc',
                            400: '#38bdf8',
                            500: '#0ea5e9',
                            600: '#0284c7',
                            700: '#0369a1',
                            800: '#075985',
                            900: '#0c4a6e',
                            950: '#082f49',
                        },
                        secondary: {
                            50: '#f5f3ff',
                            100: '#ede9fe',
                            200: '#ddd6fe',
                            300: '#c4b5fd',
                            400: '#a78bfa',
                            500: '#8b5cf6',
                            600: '#7c3aed',
                            700: '#6d28d9',
                            800: '#5b21b6',
                            900: '#4c1d95',
                            950: '#2e1065',
                        },
                    },
                },
            },
        }
    </script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        
        .scrollbar-hide::-webkit-scrollbar {
            display: none;
        }
        
        .scrollbar-hide {
            -ms-overflow-style: none;
            scrollbar-width: none;
        }
        
        @keyframes pulse {
            0%, 100% {
                opacity: 1;
            }
            50% {
                opacity: 0.5;
            }
        }
        
        .animate-pulse {
            animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        }
        
        .image-gallery-thumb {
            transition: all 0.3s ease;
        }
        
        .image-gallery-thumb.active {
            border-color: #0ea5e9;
            box-shadow: 0 0 0 2px rgba(14, 165, 233, 0.5);
        }
        
        .spec-grid {
            display: grid;
            grid-template-columns: auto 1fr;
            gap: 0.5rem 1.5rem;
        }
    </style>
</head>
<body class="bg-gray-50 font-sans">
  <!-- Main Container -->
  <div class="flex h-screen overflow-hidden">
    <!-- Overlay for mobile sidebar -->
    <div id="overlay" class="fixed inset-0 bg-black/50 z-20 hidden lg:hidden"></div>
    
    <!-- Sidebar - Fixed width on large screens, fixed position on small screens -->
    <aside id="sidebar" class="fixed lg:static inset-y-0 left-0 z-50 w-64 bg-white border-r border-gray-200 shadow-lg transform transition-transform duration-300 ease-in-out -translate-x-full lg:translate-x-0 flex-shrink-0">
      <div class="flex flex-col h-full">
        <!-- Logo Area -->
        <div class="flex items-center justify-between h-16 px-6 border-b border-gray-200">
          <a href="/admin/dashboard" class="flex items-center space-x-2">
            <div class="bg-gradient-to-r from-primary-600 to-secondary-600 p-1.5 rounded-lg">
              <img src="/backend/imgs/logos/cyclonelogo.png" class="h-6 w-6" alt="CycloneX Dashboard">
            </div>
            <span class="text-xl font-bold text-gray-800">CycloneX</span>
          </a>
          <button id="closeSidebar" class="lg:hidden text-gray-500 hover:text-gray-700">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>
        
        <!-- Navigation -->
        <nav class="flex-1 px-4 py-4 overflow-y-auto scrollbar-hide">
          <div class="space-y-1">
            <p class="px-2 text-xs font-semibold text-gray-400 uppercase tracking-wider">Main</p>
            
            <a href="/admin/dashboard" class="flex items-center px-3 py-2.5 text-sm font-medium text-gray-700 rounded-lg hover:bg-gray-100 group">
              <i class="fas fa-home w-5 h-5 mr-2 text-gray-500 group-hover:text-gray-700"></i>
              <span>Dashboard</span>
            </a>
            
            <a href="/admin/product-list2" class="flex items-center px-3 py-2.5 text-sm font-medium rounded-lg bg-primary-50 text-primary-700 group">
              <i class="fas fa-shopping-bag w-5 h-5 mr-2"></i>
              <span>Products</span>
            </a>
            
            <a href="/admin/category" class="flex items-center px-3 py-2.5 text-sm font-medium text-gray-700 rounded-lg hover:bg-gray-100 group">
              <i class="fas fa-tags w-5 h-5 mr-2 text-gray-500 group-hover:text-gray-700"></i>
              <span>Categories</span>
            </a>
            
            <a href="/admin/brands" class="flex items-center px-3 py-2.5 text-sm font-medium text-gray-700 rounded-lg hover:bg-gray-100 group">
              <i class="fas fa-star w-5 h-5 mr-2 text-gray-500 group-hover:text-gray-700"></i>
              <span>Brands</span>
            </a>
          </div>
          
          <a href="/admin/salesreport" class="flex items-center px-3 py-2.5 text-sm font-medium text-gray-700 rounded-lg hover:bg-gray-100 group">
            <i class="fas fa-chart-line w-5 h-5 mr-2 text-gray-500 group-hover:text-gray-700"></i>
            <span>Sales Report</span>
          </a>
          
          <div class="mt-8 space-y-1">
            <p class="px-2 text-xs font-semibold text-gray-400 uppercase tracking-wider">Management</p>
            
            <a href="/admin/userlist" class="flex items-center px-3 py-2.5 text-sm font-medium text-gray-700 rounded-lg hover:bg-gray-100 group">
              <i class="fas fa-users w-5 h-5 mr-2 text-gray-500 group-hover:text-gray-700"></i>
              <span>Users</span>
            </a>
            
            <a href="/admin/adminwallet" class="flex items-center px-3 py-2.5 text-sm font-medium text-gray-700 rounded-lg hover:bg-gray-100 group">              
              <i class="fas fa-wallet w-5 h-5 mr-2 text-gray-500 group-hover:text-gray-700"></i>
              <span>Wallet</span>
            </a>
            
            <a href="/admin/coupons" class="flex items-center px-3 py-2.5 text-sm font-medium text-gray-700 rounded-lg hover:bg-gray-100 group">
              <i class="fas fa-gift w-5 h-5 mr-2 text-gray-500 group-hover:text-gray-700"></i>
              <span>Coupons</span>
            </a>
            
            <a href="/admin/orderlist" class="flex items-center px-3 py-2.5 text-sm font-medium text-gray-700 rounded-lg hover:bg-gray-100 group">
              <i class="fas fa-clipboard-list w-5 h-5 mr-2 text-gray-500 group-hover:text-gray-700"></i>
              <span>Orders</span>
            </a>
            
            <a href="/admin/Logout" class="flex items-center px-3 py-2.5 text-sm font-medium text-gray-700 rounded-lg hover:bg-gray-100 group">
              <i class="fas fa-sign-out-alt w-5 h-5 mr-2 text-gray-500 group-hover:text-gray-700"></i>
              <span>Logout</span>
            </a>
          </div>
        </nav>
      </div>
    </aside>

    <!-- Main Content Area -->
    <div class="flex-1 flex flex-col overflow-hidden">
      <!-- Header -->
      <header class="bg-white border-b border-gray-200 shadow-sm">
        <div class="flex items-center justify-between h-16 px-4 sm:px-6">
          <!-- Left: Hamburger Menu -->
          <div class="flex items-center">
            <button id="openSidebar" class="lg:hidden text-gray-500 hover:text-gray-700 focus:outline-none">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            </button>
            <div class="hidden md:flex items-center ml-4">
              <h1 class="text-xl font-semibold text-gray-800">Product Details</h1>
     
            </div>
            <!-- Mobile Title -->
            <div class="md:hidden ml-2">
              <h1 class="text-lg font-semibold text-gray-800">Product</h1>
            </div>
          </div>
          
      
        </div>
      </header>

      <!-- Main Content -->
      <main class="flex-1 overflow-y-auto bg-gray-50">
        <!-- Breadcrumb & Back Button -->
        <div class="py-4 px-4 sm:px-6 lg:px-8">
          <div class="flex flex-wrap items-center gap-2">
            <a href="/admin/product-list2" class="text-sm font-medium text-gray-600 hover:text-primary-600 flex items-center gap-1">
              <i class="fas fa-chevron-left text-xs"></i>
              <span>Back to Products</span>
            </a>
            <span class="text-gray-400">/</span>
            <span class="text-sm font-medium text-primary-600 truncate max-w-xs"><%= product.productName %></span>
          </div>
        </div>
        
        <!-- Product Details Content -->
        <div class="px-4 sm:px-6 lg:px-8 pb-12">
          <div class="grid grid-cols-1 lg:grid-cols-12 gap-6">
            <!-- Product Image Section -->
            <div class="lg:col-span-5 space-y-6">
              <!-- Main Image with Glass Effect Card -->
              <div class="relative rounded-2xl overflow-hidden bg-white shadow-md border border-gray-100 group">
                <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                <img id="mainImage" src="/<%= product.mainImage %>" alt="<%= product.productName %>" class="w-full h-96 object-contain p-4">
                
                <!-- Image Controls -->
                <div class="absolute bottom-0 left-0 right-0 p-4 flex justify-between items-center">
                  <div class="flex gap-2">
                    <button class="text-white bg-gray-700/70 hover:bg-gray-700/90 p-2 rounded-full transition-colors">
                      <i class="fas fa-expand-alt"></i>
                    </button>
                  </div>
                  <div class="flex gap-2">
                    <button id="prevBtn" class="text-white bg-gray-700/70 hover:bg-gray-700/90 p-2 rounded-full transition-colors">
                      <i class="fas fa-chevron-left"></i>
                    </button>
                    <button id="nextBtn" class="text-white bg-gray-700/70 hover:bg-gray-700/90 p-2 rounded-full transition-colors">
                      <i class="fas fa-chevron-right"></i>
                    </button>
                  </div>
                </div>
              </div>
              
              <!-- Thumbnails -->
              <div class="flex gap-2 overflow-x-auto scrollbar-hide pb-2">
                <div class="image-gallery-thumb rounded-lg overflow-hidden border-2 border-transparent cursor-pointer hover:border-primary-300 transition-all min-w-16 active" data-src="/<%= product.mainImage %>">
                  <img src="/<%= product.mainImage %>" alt="Main Image" class="w-16 h-16 object-contain">
                </div>
                
                <% product.images.forEach((image, index) => { %>
                  <div class="image-gallery-thumb rounded-lg overflow-hidden border-2 border-transparent cursor-pointer hover:border-primary-300 transition-all min-w-16" data-src="/<%= image %>">
                    <img src="/<%= image %>" alt="Product Image <%= index+1 %>" class="w-16 h-16 object-contain">
                  </div>
                <% }) %>
              </div>
            </div>

            <!-- Product Info Section -->
            <div class="lg:col-span-7 space-y-6">
              <!-- Product Header & Badges -->
              <div class="flex flex-col gap-3">
                <div class="flex flex-wrap gap-2">
                  <% if (!product.isDeleted) { %>
                    <span class="px-3 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800">
                      Active
                    </span>
                  <% } else { %>
                    <span class="px-3 py-1 text-xs font-medium rounded-full bg-red-100 text-red-800">
                      Deactivated
                    </span>
                  <% } %>
                  
                  <% if (product.offer > 0) { %>
                    <span class="px-3 py-1 text-xs font-medium rounded-full bg-orange-100 text-orange-800">
                      <%= product.offer %>% OFF
                    </span>
                  <% } %>
                  
                  <span class="px-3 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800">
                    <%= product.category?.name || 'No Category' %>
                  </span>
                </div>
                
                <h1 class="text-2xl sm:text-3xl font-bold text-gray-900 leading-tight"><%= product.productName %></h1>
                
                <div class="flex items-center gap-3 text-sm text-gray-600">
                  <span class="flex items-center gap-1">
                    <i class="fas fa-tag"></i>
                    <span><%= product.brands ? product.brands.name : 'No Brand' %></span>
                  </span>
                  <span class="flex items-center gap-1">
                    <i class="fas fa-box"></i>
                    <span>ID: <%= product._id %></span>
                  </span>
                </div>
              </div>
              
              <!-- Pricing & Stock Card -->
              <div class="bg-white rounded-xl p-5 border border-gray-200 shadow-sm">
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <!-- Price -->
                  <div class="flex flex-col gap-1">
                    <span class="text-sm font-medium text-gray-500">Price</span>
                    <div class="flex items-end gap-2">
                      <% if (product.offer > 0) { %>
                        <span class="text-2xl font-bold text-primary-600">₹<%= (product.price * (1 - product.offer/100)).toFixed(2) %></span>
                        <span class="text-sm line-through text-gray-400 mb-1">₹<%= product.price.toFixed(2) %></span>
                      <% } else { %>
                        <span class="text-2xl font-bold text-gray-900">₹<%= product.price.toFixed(2) %></span>
                      <% } %>
                    </div>
                  </div>
                  
                  <!-- Stock -->
                  <div class="flex flex-col gap-1">
                    <span class="text-sm font-medium text-gray-500">Stock</span>
                    <% if (product.stock > 0) { %>
                      <div class="flex items-center gap-2">
                        <div class="w-full bg-gray-200 rounded-full h-2">
                          <div class="bg-primary-600 h-2 rounded-full" style="width: <%= Math.min(product.stock / 10 * 100, 100) %>%"></div>
                        </div>
                        <span class="text-base font-semibold text-gray-900"><%= product.stock %></span>
                      </div>
                    <% } else { %>
                      <span class="text-base font-semibold text-red-600">Out of stock</span>
                    <% } %>
                  </div>
                  
                  
                </div>
              </div>
              
              <!-- Description & Specification Tabs -->
              <div class="bg-white rounded-xl overflow-hidden border border-gray-200 shadow-sm">
                <div class="flex border-b border-gray-200">
                  <button id="descriptionTab" class="px-4 py-3 text-sm font-medium text-primary-600 border-b-2 border-primary-600 focus:outline-none">
                    Description
                  </button>
                  <button id="specificationsTab" class="px-4 py-3 text-sm font-medium text-gray-500 hover:text-gray-700 focus:outline-none">
                    Specifications
                  </button>
                </div>
                
                <div class="p-5">
                  <!-- Description Content -->
                  <div id="descriptionContent" class="prose max-w-none">
                    <p class="text-gray-700 whitespace-pre-line"><%= product.description %></p>
                  </div>
                  
                  <!-- Specifications Content -->
                  <div id="specificationsContent" class="hidden">
                    <div class="spec-grid">
                      <div class="text-sm font-medium text-gray-500">Brand</div>
                      <div class="text-sm text-gray-900"><%= product.brands ? product.brands.name : 'Not specified' %></div>
                      
                      <div class="text-sm font-medium text-gray-500">Category</div>
                      <div class="text-sm text-gray-900"><%= product.category ? product.category.name : 'Not specified' %></div>
                      
                      <div class="text-sm font-medium text-gray-500">Stock</div>
                      <div class="text-sm text-gray-900"><%= product.stock %> units</div>
                      
                      <div class="text-sm font-medium text-gray-500">Price</div>
                      <div class="text-sm text-gray-900">₹<%= product.price.toFixed(2) %></div>
                      
                      <% if (product.offer > 0) { %>
                        <div class="text-sm font-medium text-gray-500">Discount</div>
                        <div class="text-sm text-gray-900"><%= product.offer %>%</div>
                        
                        <div class="text-sm font-medium text-gray-500">Sale Price</div>
                        <div class="text-sm text-gray-900">₹<%= (product.price * (1 - product.offer/100)).toFixed(2) %></div>
                      <% } %>
                      
                      <div class="text-sm font-medium text-gray-500">Product ID</div>
                      <div class="text-sm text-gray-900"><%= product._id %></div>
                    </div>
                  </div>
                </div>
              </div>
              
              <!-- Action Buttons -->
              <div class="flex flex-wrap gap-3">
                <a href="/admin/editproduct/<%= product._id %>" class="flex items-center gap-2 bg-primary-600 text-white px-5 py-2.5 rounded-lg hover:bg-primary-700 transition-colors">
                  <i class="fas fa-pencil-alt"></i>
                  <span>Edit Product</span>
                </a>
             
             
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  </div>

  <!-- SweetAlert2 -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  // Mobile sidebar toggle
  document.addEventListener('DOMContentLoaded', function() {
    const sidebar = document.getElementById('sidebar');
    const overlay = document.getElementById('overlay');
    const openSidebarBtn = document.getElementById('openSidebar');
    const closeSidebarBtn = document.getElementById('closeSidebar');
    
    function openSidebar() {
      sidebar.classList.remove('-translate-x-full');
      overlay.classList.remove('hidden');
      document.body.classList.add('overflow-hidden', 'lg:overflow-auto');
    }
    
    function closeSidebar() {
      sidebar.classList.add('-translate-x-full');
      overlay.classList.add('hidden');
      document.body.classList.remove('overflow-hidden', 'lg:overflow-auto');
    }
    
    if (openSidebarBtn) {
      openSidebarBtn.addEventListener('click', openSidebar);
    }
    
    if (closeSidebarBtn) {
      closeSidebarBtn.addEventListener('click', closeSidebar);
    }
    
    if (overlay) {
      overlay.addEventListener('click', closeSidebar);
    }
    
    // Close sidebar on window resize if screen becomes large
    window.addEventListener('resize', function() {
      if (window.innerWidth >= 1024) {
        closeSidebar();
      }
    });
    
    // Image Gallery Functionality
    const mainImage = document.getElementById('mainImage');
    const thumbnails = document.querySelectorAll('.image-gallery-thumb');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    let currentIndex = 0;
    
    // Collect all image sources
    const imageSources = Array.from(thumbnails).map(thumb => thumb.dataset.src);
    
    // Set initial active thumbnail
    thumbnails[0].classList.add('active');
    
    // Set active thumbnail and update main image
    function setActiveImage(index) {
      // Remove active class from all thumbnails
      thumbnails.forEach(thumb => thumb.classList.remove('active'));
      
      // Set active class on current thumbnail
      thumbnails[index].classList.add('active');
      
      // Update main image
      mainImage.src = imageSources[index];
      
      // Update current index
      currentIndex = index;
    }
    
    // Previous button
    prevBtn.addEventListener('click', () => {
      const newIndex = (currentIndex - 1 + imageSources.length) % imageSources.length;
      setActiveImage(newIndex);
    });
    
    // Next button
    nextBtn.addEventListener('click', () => {
      const newIndex = (currentIndex + 1) % imageSources.length;
      setActiveImage(newIndex);
    });
    
    // Add click event to thumbnails
    thumbnails.forEach((thumb, index) => {
      thumb.addEventListener('click', () => {
        setActiveImage(index);
      });
    });
    
    // Tab switching
    const descriptionTab = document.getElementById('descriptionTab');
    const specificationsTab = document.getElementById('specificationsTab');
    const descriptionContent = document.getElementById('descriptionContent');
    const specificationsContent = document.getElementById('specificationsContent');
    
    descriptionTab.addEventListener('click', () => {
      // Update tab styling
      descriptionTab.classList.add('text-primary-600', 'border-b-2', 'border-primary-600');
      descriptionTab.classList.remove('text-gray-500', 'hover:text-gray-700');
      
      specificationsTab.classList.remove('text-primary-600', 'border-b-2', 'border-primary-600');
      specificationsTab.classList.add('text-gray-500', 'hover:text-gray-700');
      
      // Show/hide content
      descriptionContent.classList.remove('hidden');
      specificationsContent.classList.add('hidden');
    });
    
    specificationsTab.addEventListener('click', () => {
      // Update tab styling
      specificationsTab.classList.add('text-primary-600', 'border-b-2', 'border-primary-600');
      specificationsTab.classList.remove('text-gray-500', 'hover:text-gray-700');
      
      descriptionTab.classList.remove('text-primary-600', 'border-b-2', 'border-primary-600');
      descriptionTab.classList.add('text-gray-500', 'hover:text-gray-700');
      
      // Show/hide content
      specificationsContent.classList.remove('hidden');
      descriptionContent.classList.add('hidden');
    });
    
    
      // Quantity selector functionality
      const quantityInput = document.getElementById('quantity');
      const incrementBtn = document.getElementById('incrementQuantity');
      const decrementBtn = document.getElementById('decrementQuantity');
      
      if (incrementBtn && decrementBtn && quantityInput) {
        incrementBtn.addEventListener('click', () => {
          quantityInput.value = parseInt(quantityInput.value) + 1;
        });
        
        decrementBtn.addEventListener('click', () => {
          const currentValue = parseInt(quantityInput.value);
          if (currentValue > 1) {
            quantityInput.value = currentValue - 1;
          }
        });
        
        // Ensure quantity is always a valid number
        quantityInput.addEventListener('change', () => {
          let value = parseInt(quantityInput.value);
          if (isNaN(value) || value < 1) {
            quantityInput.value = 1;
          }
        });
      }
      
      // Add to cart functionality
      const addToCartForm = document.getElementById('addToCartForm');
      if (addToCartForm) {
        addToCartForm.addEventListener('submit', async function(event) {
          event.preventDefault();
          const formData = new FormData(this);
          
          try {
            const response = await fetch('/cart/add', {
              method: 'POST',
              headers: {
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
              },
              body: formData
            });
            
            const data = await response.json();
            
            if (response.ok) {
              // Update cart count in header
              const cartCountElement = document.getElementById('cartCount');
              if (cartCountElement) {
                cartCountElement.textContent = data.cartCount;
                cartCountElement.classList.remove('hidden');
              }
              
              Swal.fire({
                title: 'Added to Cart!',
                text: 'The product has been added to your cart.',
                icon: 'success',
                confirmButtonColor: '#0ea5e9',
                customClass: {
                  confirmButton: 'rounded-lg text-sm font-medium px-5 py-2.5',
                  popup: 'rounded-xl'
                }
              });
            } else {
              throw new Error(data.message || 'Failed to add item to cart');
            }
          } catch (error) {
            console.error('Error adding to cart:', error);
            
            Swal.fire({
              title: 'Error!',
              text: error.message || 'Failed to add item to cart. Please try again.',
              icon: 'error',
              confirmButtonColor: '#0ea5e9',
              customClass: {
                confirmButton: 'rounded-lg text-sm font-medium px-5 py-2.5',
                popup: 'rounded-xl'
              }
            });
          }
        });
      }
    });
  </script>
  </body>
  </html>