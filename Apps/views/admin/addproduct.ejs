<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('partials/head') %>
</head>
<body class="bg-gray-100">
  <div class="min-h-screen flex flex-col">
    <%- include('partials/header') %>
    <main class="flex-1 p-6">
      <div class="max-w-3xl mx-auto bg-white shadow-lg rounded-lg p-6">
        <% if (typeof success !== 'undefined' && success) { %>
          <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
            <strong class="font-bold">Success!</strong>
            <span class="block sm:inline">Product added successfully.</span>
          </div>
        <% } %>

        <h2 class="text-2xl font-bold text-gray-800 mb-6">Add New Product</h2>
        
        <form action="/admin/addproduct" method="POST" enctype="multipart/form-data" class="space-y-4" id="addProductForm">
            <!-- Product Name -->
            <div>
              <label class="block text-gray-700 font-semibold">Product Name</label>
              <input type="text" name="productName" class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500">
              <span id="error-productName" class="text-red-500 text-sm"></span>
            </div>
            
            <!-- Description -->
            <div>
              <label class="block text-gray-700 font-semibold">Description</label>
              <textarea name="description" class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500"></textarea>
              <span id="error-description" class="text-red-500 text-sm"></span>
            </div>
            
            <!-- Price -->
            <div>
              <label class="block text-gray-700 font-semibold">Price ($)</label>
              <input type="number" name="price" step="0.01" class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500">
              <span id="error-price" class="text-red-500 text-sm"></span>
            </div>
            
            <!-- Category Selection -->
            <div>
              <label class="block text-gray-700 font-semibold">Category</label>
              <select name="category" class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500">
                <option value="">Select Category</option>
                <% category.forEach(category => { %>
                  <option value="<%= category._id %>"><%= category.name %></option>
                <% }) %>
              </select>
              <span id="error-category" class="text-red-500 text-sm"></span>
            </div>
            
            <!-- Brand Selection -->
            <div>
              <label class="block text-gray-700 font-semibold">Brand</label>
              <select name="brands" class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500">
                <option value="">Select Brand</option>
                <% brands.forEach(brand => { %>
                  <option value="<%= brand._id %>"><%= brand.name %></option>
                <% }) %>
              </select>
              <span id="error-brands" class="text-red-500 text-sm"></span>
            </div>
            
            <!-- Main Image (without cropping) -->
            <div>
              <label class="block text-gray-700 font-semibold">Main Image (No Cropping)</label>
              <input type="file" name="mainImage" accept="image/*" class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500">
              <p class="text-sm text-gray-500 mt-1">Upload the main image without cropping.</p>
              <span id="error-mainImage" class="text-red-500 text-sm"></span>
            </div>
            
            <!-- Additional Images (to be cropped in backend) -->
            <div>
              <label class="block text-gray-700 font-semibold">Product Images (Max 4)</label>
              <input type="file" name="images" multiple accept="image/*" class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500">
              <p class="text-sm text-gray-500 mt-1">You can upload up to 4 additional images (these will be cropped automatically).</p>
              <span id="error-images" class="text-red-500 text-sm"></span>
            </div>
            
            <!-- Submit Button -->
            <div>
              <button type="submit" class="w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition">Add Product</button>
            </div>
          </form>
          
          
      </div>
    </main>
    <%- include('partials/footer') %>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    document.getElementById('addProductForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      // Clear any previous error messages
      document.querySelectorAll('.text-red-500').forEach(el => el.textContent = "");
      
      // Ask for confirmation before submitting the form
      const result = await Swal.fire({
        title: 'Add New Product?',
        text: 'Are you sure you want to add this product?',
        icon: 'question',
        showCancelButton: true,
        confirmButtonText: 'Yes, add it!',
        cancelButtonText: 'Cancel',
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33'
      });
      
      if (result.isConfirmed) {
        const formData = new FormData(this);
        try {
          const response = await fetch('/admin/addproduct', {
            method: 'POST',
            body: formData
          });
          const data = await response.json();
          if (!response.ok) {
            // If backend validation errors are returned, display them next to the appropriate fields.
            if (data.errors) {
              for (const field in data.errors) {
                const errorElement = document.getElementById(`error-${field}`);
                if (errorElement) {
                  errorElement.textContent = data.errors[field];
                }
              }
            } else {
              // Otherwise, show a generic error alert.
              Swal.fire({
                icon: 'error',
                title: 'Failed to add product',
                text: data.message || 'An error occurred'
              });
            }
            return;
          }
          // On success, show a success alert and then redirect.
          Swal.fire({
            icon: 'success',
            title: 'Product added successfully!'
          }).then(() => {
            window.location.href = '/admin/product-list2';
          });
        } catch (error) {
          Swal.fire({
            icon: 'error',
            title: 'Failed to add product',
            text: error.message
          });
        }
      }
    });
  </script>
  
  
  
  
</body>
</html>
