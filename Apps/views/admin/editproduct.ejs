<!DOCTYPE HTML>
<html lang="en">

<%- include('partials/head') %>
<body class="bg-gray-100">

    <div class="screen-overlay"></div>

    <!-- Sidebar -->
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
          <a href="" class="brand-wrap">
            <img src="/backend/imgs/logos/cyclonelogo.png" class="logo" alt="CycloneX Dashboard">
          </a>
          <div>
            <button class="btn btn-icon btn-aside-minimize">
              <i class="text-muted material-icons md-menu_open"></i>
            </button>
          </div>
        </div>
        <nav>
          <ul class="menu-aside">
            <li class="menu-item">
              <a class="menu-link" href="/admin/dashboard">
                <i class="icon material-icons md-home"></i>
                <span class="text">Dashboard</span>
              </a>
            </li>
            <li class="menu-item has-submenu active">
                <a class="menu-link" href="#">
                  <i class="icon material-icons md-shopping_bag"></i>
                  <span class="text">Products</span>
                </a>
                <ul class="submenu">
                  <li><a href="/admin/addproduct" class="submenu-link">Add Product</a></li>
                </ul>
              </li>
            <li class="menu-item">
              <a class="menu-link" href="/admin/category">
                <i class="icon material-icons md-category"></i>
                <span class="text">Category</span>
              </a>
            </li>
            <li class="menu-item">
              <a class="menu-link" href="/admin/brands">
                <i class="icon material-icons md-stars"></i>
                <span class="text">Brands</span>
              </a>
            </li>
            <li class="menu-item active">
              <a class="menu-link" href="#">
                <i class="icon material-icons md-store"></i>
                <span class="text">Users</span>
              </a>
            </li>
          </ul>
        </nav>
      </aside>

    <!-- Main Content -->
    <main class="main-wrap ml-64 p-6">
      
        <section class="content-main bg-white shadow-md rounded-lg p-6">
            <div class="flex justify-between items-center border-b pb-4 mb-6">
                <h2 class="text-2xl font-semibold text-gray-800">Edit Product</h2>
            </div>

            <form id="editProductForm" action="/admin/edit-product/<%= product._id %>" method="POST" enctype="multipart/form-data" class="space-y-6">
                <input type="hidden" name="productId" value="<%= product._id %>">

                <!-- Product Title -->
                <div>
                    <label class="block text-gray-700 font-medium mb-1">Product Title</label>
                    <input type="text" name="productName" placeholder="Enter product name"
                        class="w-full px-4 py-2 border rounded-lg focus:ring focus:ring-blue-300" value="<%= product.productName %>" >
                    <p id="productNameError" class="text-red-500 text-sm mt-1"></p>
                </div>

                <!-- Description -->
                <div>
                    <label class="block text-gray-700 font-medium mb-1">Description</label>
                    <textarea name="description" placeholder="Enter description" rows="4"
                        class="w-full px-4 py-2 border rounded-lg focus:ring focus:ring-blue-300" ><%= product.description %></textarea>
                    <p id="descriptionError" class="text-red-500 text-sm mt-1"></p>
                </div>

                <!-- Brand Selection -->
                <div>
                    <label class="block text-gray-700 font-medium mb-1">Brand</label>
                    <select name="brands" class="w-full px-4 py-2 border rounded-lg focus:ring focus:ring-blue-300" >
                        <% brands.forEach(brand => { %>
                            <option value="<%= brand._id %>" <%= brand._id.toString() === product.brands._id.toString() ? 'selected' : '' %>><%= brand.name %></option>
                        <% }) %>
                    </select>
                </div>

                <!-- Category Selection -->
                <div>
                    <label class="block text-gray-700 font-medium mb-1">Category</label>
                    <select name="category" class="w-full px-4 py-2 border rounded-lg focus:ring focus:ring-blue-300" >
                        <% category.forEach(cat => { %>
                            <option value="<%= cat._id %>" <%= product.category && product.category._id.toString() === cat._id.toString() ? 'selected' : '' %>><%= cat.name %></option>
                        <% }) %>
                    </select>
                </div>

                <!-- Price -->
                <div>
                    <label class="block text-gray-700 font-medium mb-1">Price</label>
                    <input type="number" name="price" placeholder="00.0"
                        class="w-full px-4 py-2 border rounded-lg focus:ring focus:ring-blue-300" value="<%= product.price %>" >
                    <p id="priceError" class="text-red-500 text-sm mt-1"></p>
                </div>  
                
                <!-- Stock -->
                <div>
                    <label class="block text-gray-700 font-medium mb-1">Stock</label>
                    <input type="number" name="stock" placeholder="Enter stock quantity"
                           class="w-full px-4 py-2 border rounded-lg focus:ring focus:ring-blue-300" 
                           value="<%= product.stock %>">
                </div>

                <!-- Main Image Upload -->
                <div>
                    <label class="block text-gray-700 font-medium mb-1">Main Image</label>
                    <input type="file" name="mainImage" class="w-full px-4 py-2 border rounded-lg focus:ring focus:ring-blue-300">
                    
                    <% if (product.mainImage) { %>
                        <div class="mt-3 flex items-center gap-3">
                            <div class="relative">
                                <img src="/<%= product.mainImage %>" class="w-32 h-32 object-cover rounded-lg shadow-md">
                                <button type="button" data-image="<%= product.mainImage %>" data-type="main" 
                                        class="delete-image absolute -top-2 -right-2 bg-white text-black rounded-full p-1 ">
                                    <i class="material-icons text-sm">X</i>
                                </button>
                            </div>
                        </div>
                    <% } %>
                </div>

                <!-- Additional Images Upload -->
                <div>
                    <label class="block text-gray-700 font-medium mb-1">Additional Images</label>
                    <input type="file" name="images" multiple class="w-full px-4 py-2 border rounded-lg focus:ring focus:ring-blue-300">
                    
                    <% if (product.images && product.images.length > 0) { %>
                        <div class="mt-3">
                            <p class="text-gray-600">Current Additional Images:</p>
                            <div class="flex flex-wrap gap-3 mt-2">
                                <% product.images.forEach((image, index) => { %>
                                    <div class="relative">
                                        <img src="/<%= image %>" class="w-24 h-24 object-cover rounded-lg shadow-md">
                                        <button type="button" data-image="<%= image %>" data-index="<%= index %>" data-type="additional"
                                          class="delete-image absolute -top-2 -right-2 bg-white text-black rounded-full p-1 ">
                                            <i class="material-icons text-sm">X</i>
                                        </button>
                                    </div>
                                <% }) %>
                            </div>
                        </div>
                    <% } %>
                </div>

                <!-- Submit Button -->
                <div class="flex items-center gap-4">
                    <button type="submit" class="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition duration-300">
                        Update Product
                    </button>
                    <a href="/admin/product-list2" class="text-gray-600 hover:text-gray-800 transition">Cancel</a>
                </div>
            </form>
        </section>

        <%- include('partials/footer') %>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <%- include('partials/scripts') %>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle image deletion
            document.querySelectorAll('.delete-image').forEach(button => {
                button.addEventListener('click', async function() {
                    const imageType = this.dataset.type;
                    const imagePath = this.dataset.image;
                    const imageIndex = this.dataset.index;
                    const productId = document.querySelector('input[name="productId"]').value;
                    
                    const result = await Swal.fire({
                        title: 'Delete Image?',
                        text: "This image will be permanently deleted!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'Cancel'
                    });

                    if (result.isConfirmed) {
                        // Call API to delete the image
                        fetch(`/admin/delete-product-image/${productId}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ 
                                type: imageType, 
                                image: imagePath,
                                index: imageIndex 
                            })
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire('Deleted!', 'Image has been deleted.', 'success')
                                .then(() => window.location.reload());
                            } else {
                                Swal.fire('Error', data.message || 'Failed to delete image.', 'error');
                            }
                        })
                        .catch(error => {
                            console.error(error);
                            Swal.fire('Error', 'Something went wrong.', 'error');
                        });
                    }
                });
            });

            // Form submission
            document.getElementById('editProductForm').addEventListener('submit', async function(event) {
                event.preventDefault();

                const formData = new FormData(this);
                const productId = formData.get('productId');
                
                // Clear previous errors
                document.getElementById('productNameError').textContent = '';
                document.getElementById('descriptionError').textContent = '';
                document.getElementById('priceError').textContent = '';

                const result = await Swal.fire({
                    title: 'Confirm Update?',
                    text: "Do you want to save these changes?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, update it!',
                    cancelButtonText: 'Cancel'
                });

                if (result.isConfirmed) {
                    fetch(`/admin/editproduct/${productId}`, {
                        method: 'PUT',
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire('Updated!', 'Product updated successfully.', 'success')
                            .then(() => window.location.href = '/admin/product-list2');
                        } else if (data.errors) {
                            // Display validation errors
                            if (data.errors.productName) {
                                document.getElementById('productNameError').textContent = data.errors.productName;
                            }
                            if (data.errors.description) {
                                document.getElementById('descriptionError').textContent = data.errors.description;
                            }
                            if (data.errors.price) {
                                document.getElementById('priceError').textContent = data.errors.price;
                            }
                        } else {
                            Swal.fire('Error', data.message || 'Failed to update product.', 'error');
                        }
                    })
                    .catch(error => {
                        console.error(error);
                        Swal.fire('Error', 'Something went wrong.', 'error');
                    });
                }
            });
        });
    </script>

</body>
</html>