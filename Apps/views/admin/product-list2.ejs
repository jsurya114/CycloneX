<!DOCTYPE HTML>
<html lang="en">
<%- include('partials/head') %>
<body>
  <div class="screen-overlay"></div>
  <aside class="navbar-aside" id="offcanvas_aside">
    <div class="aside-top">
      <a href="" class="brand-wrap">
        <img src="/backend/imgs/logos/cyclonelogo.png" class="logo" alt="CycloneX Dashboard">
      </a>
      <div>
        <button class="btn btn-icon btn-aside-minimize">
          <i class="text-muted material-icons md-menu_open"></i>
        </button>
      </div>
    </div>
    <nav>
      <ul class="menu-aside">
        <li class="menu-item">
          <a class="menu-link" href="/admin/dashboard">
            <i class="icon material-icons md-home"></i>
            <span class="text">Dashboard</span>
          </a>
        </li>
        <li class="menu-item has-submenu active">
            <a class="menu-link" href="#">
              <i class="icon material-icons md-shopping_bag"></i>
              <span class="text">Products</span>
              <!-- <i class="icon-expand material-icons md-expand_more"></i> -->
            </a>
            <ul class="submenu">
              <!-- <li><a href="/admin/product-list2" class="submenu-link">Product List</a></li> -->
              <li><a href="/admin/addproduct" class="submenu-link">Add Product</a></li>
            </ul>
          </li>
        <li class="menu-item">
          <a class="menu-link" href="/admin/category">
            <i class="icon material-icons md-category"></i>
            <span class="text">Category</span>
          </a>
        </li>
        <li class="menu-item">
          <a class="menu-link" href="/admin/brands">
            <i class="icon material-icons md-stars"></i>
            <span class="text">Brands</span>
          </a>
        </li>
        <li class="menu-item  ">
          <a class="menu-link" href="/admin/userlist">
            <i class="icon material-icons md-store"></i>
            <span class="text">Users</span>
            <!-- <i class="icon-expand material-icons md-expand_more"></i> -->
          </a>
       
        </li>



        <li class="menu-item ">
          <a class="menu-link" href="/admin/orderlist">
            <i class="icon material-icons md-shopping_bag"></i>
            <span class="text">Orders</span>
            <!-- <i class="icon-expand material-icons md-expand_more"></i> -->
          </a>
          <!-- <ul class="submenu">
            <li><a href="/admin/product-list2" class="submenu-link">Product List</a></li>
            <li><a href="/admin/orderlist" class="submenu-link">Add Product</a></li>
          </ul> -->
        </li>
      </ul>
    </nav>
  </aside>
  <main class="main-wrap">
    <%- include('partials/header') %>
    <h2 class="content-title card-title text-4xl mt-3">Products</h2>
    <section class="content-main">
      <div class="content-header flex justify-between">
        
        <br>
        <div class="flex flex-col sm:flex-row items-center sm:space-x-4 mb-4">
          <!-- Search Input -->
          <input
              type="text"
              id="searchInput"
              placeholder="Search Products"
              class="bg-white px-3 py-2 border rounded-md w-full sm:max-w-xs"
          />
          
          <!-- Search Button -->
          <button
              id="searchBtn"
              class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
              Search
          </button>
          
          <!-- Clear Button -->
          <button
              id="clearBtn"
              class="bg-gray-300 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-400"
          >
              Clear
          </button>
     

          <!-- Status Filter Dropdown -->
          <select id="statusFilter" class="bg-white px-3 py-2 border rounded-md">
              <option value="">All Status</option>
              <option value="active">Active</option>
              <option value="deactive">Deactivated</option>
          </select>
      
          <!-- Category Filter Dropdown -->
          <select id="categoryFilter" class="bg-white px-3 py-2 border rounded-md">
              <option value="">All Categories</option>
              <% categories.forEach(cat => { %>
                  <option value="<%= cat.name %>"><%= cat.name %></option>
              <% }); %>
          </select>
      
          <!-- Brand Filter Dropdown -->
          <select id="brandFilter" class="bg-white px-3 py-2 border rounded-md">
              <option value="">All Brands</option>
              <% brands.forEach(brand => { %>
                  <option value="<%= brand.name %>"><%= brand.name %></option>
              <% }); %>
          </select>
      
          <!-- Sort Dropdown -->
          <select id="sortBy" class="bg-white px-3 py-2 border rounded-md">
              <option value="">Sort By</option>
              <option value="price_asc">Price: Low to High</option>
              <option value="price_desc">Price: High to Low</option>
              <option value="name_asc">Name: A to Z</option>
              <option value="name_desc">Name: Z to A</option>
          </select>
      </div>
      </div>
      <div class="bg-white shadow-sm rounded-lg overflow-hidden">
        <div class="p-6">
          <div class="overflow-x-auto">
            <table class="min-w-full bg-white border border-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th class="p-3 text-left">Product Name</th>
                  <th class="p-3 text-left">Category</th>
                  <th class="p-3 text-left">Brand</th>
                  <th class="p-3 text-left">Price</th>
                  <th class="p-3 text-right">Action</th>
                  <th class="p-3 text-left">Status</th>
                  <th class="p-3 text-left">Listing</th>
                </tr>
              </thead>
              <tbody>
                <% if(products && products.length> 0){ %>
                <% products.forEach(product => { %>
                  <tr class="border-b border-gray-200 hover:bg-gray-50">
                    <td class="p-3 text-sm text-gray-700">
                        <a href="/admin/product/<%= product._id %>" class="font-bold text-blue-600 hover:text-blue-800">
                          <%= product.productName %>
                        </a>
                      </td>
                   
                    <td class="p-3 text-sm text-gray-700 category-column"><%= product.category ? product.category.name : 'No Category' %></td>
                    <td class="p-3 text-sm text-gray-700"><%= product.brands ? product.brands.name :'No Brands' %></td>
                    <td class="p-3 text-sm text-gray-700">â‚¹<%= product.price ? product.price :'No product available' %></td>
                    <td class="p-3 text-right">
                      <a href="/admin/editproduct/<%= product._id %>" class="text-blue-500 hover:text-blue-700">
                        <i class="fas fa-pencil-alt" style="font-size: 1.2rem;"></i>
                      </a>
                    </td>
                    <td class="p-3">
                      <% if (product.isDeleted) { %>
                        <span class="inline-flex px-3 py-1 text-sm font-semibold rounded-full bg-red-100 text-red-800">
                          Deactivated
                        </span>
                      <% } else { %>
                        <span class="inline-flex px-3 py-1 text-sm font-semibold rounded-full bg-green-100 text-green-800">
                          Active
                        </span>
                      <% } %>
                    </td>
                    <!-- Updated Toggle Switch -->
                    <td class="p-3">
                      <label class="relative inline-flex items-center cursor-pointer">
                        <input type="checkbox" 
                               class="sr-only peer toggle-checkbox" 
                               data-id="<%= product._id %>" 
                               <%= product.isDeleted ? '' : 'checked' %> />
                        <div class="w-11 h-6 rounded-full bg-red-200 
                                    peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-red-300 
                                    dark:peer-focus:ring-red-800
                                    peer-checked:bg-green-600 relative
                                    after:absolute after:top-0.5 after:left-[2px] after:bg-white 
                                    after:border-gray-300 after:border after:rounded-full 
                                    after:h-5 after:w-5 after:transition-all 
                                    peer-checked:after:translate-x-full peer-checked:after:border-white">
                        </div>
                      </label>
                    </td>
                  </tr>
                <% }) %>
              
                <% } else { %>
                  <tr>
                    <td colspan="6" class="text-center p-3">No products found</td>
                  </tr>
              <% } %>
              </tbody>
            </table>
          
           
            <%- include('partials/pagination') %> 
          </div>
        </div>
      </div>
      
    </section>
    
    <%- include('partials/footer') %>
  </main>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <%- include('partials/scripts') %>
  <script>
   
   // Toggle switch functionality with SweetAlert confirmation
   document.querySelectorAll('.toggle-checkbox').forEach(switchElement => {
        switchElement.addEventListener('change', async function () {
          const productId = this.getAttribute('data-id');
          const newStatus = this.checked;

          const result = await Swal.fire({
            title: 'Are you sure?',
            text: `You are about to ${newStatus ? 'list' : 'unlist'} this product.`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, proceed!'
          });

          if (result.isConfirmed) {
            try {
              const response = await fetch(`/admin/toggle-product/${productId}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ status: newStatus })
              });
              if (!response.ok) throw new Error('Failed to update status');
              Swal.fire({ icon: 'success', title: 'Updated!', text: 'Product status has been updated.', confirmButtonText: 'OK' });
              window.location.reload();
            } catch (error) {
              Swal.fire({ icon: 'error', title: 'Error!', text: 'Failed to update product status.', confirmButtonText: 'OK' });
              this.checked = !newStatus;
            }
          } else {
            this.checked = !newStatus;
          }
        });
      });
   // Frontend JavaScript
document.addEventListener('DOMContentLoaded', function() {
    // Get all filter elements
    const searchInput = document.getElementById("searchInput");
    const searchBtn = document.getElementById("searchBtn");
    const brandFilter = document.getElementById("brandFilter");
    const categoryFilter = document.getElementById("categoryFilter");
    const statusFilter = document.getElementById("statusFilter");
    const sortSelect = document.getElementById("sortBy");

    // Add event listeners
    document.getElementById("searchBtn").addEventListener("click", applyFilters);
    document.getElementById("clearBtn").addEventListener("click", clearFilters);
    
    // Add change listeners to all filter dropdowns
    [brandFilter, categoryFilter, statusFilter, sortSelect].forEach(element => {
        if (element) {
            element.addEventListener('change', applyFilters);
        }
    });

    // Add enter key listener to search input
    searchInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            applyFilters();
        }
    });

    function applyFilters() {
        const queryParams = new URLSearchParams();
        
        // Get all filter values
        const search = searchInput.value.trim();
        const brand = brandFilter.value;
        const category = categoryFilter.value;
        const status = statusFilter.value;
        const sort = sortSelect?.value;

        // Add non-empty filters to query params
        if (search) queryParams.append("search", search);
        if (brand) queryParams.append("brandsFilter", brand);
        if (category) queryParams.append("categoryFilter", category);
        if (status) queryParams.append("statusFilter", status);
        if (sort) queryParams.append("sortBy", sort);

        // Navigate to filtered URL
        window.location.href = `/admin/product-list2?${queryParams.toString()}`;
    }

    function clearFilters() {
        // Reset all filter inputs
        searchInput.value = "";
        brandFilter.value = "";
        categoryFilter.value = "";
        statusFilter.value = "";
        if (sortSelect) sortSelect.value = "";

        // Apply cleared filters
        applyFilters();
    }

    // Restore filter values from URL on page load
    function restoreFiltersFromURL() {
        const params = new URLSearchParams(window.location.search);
        
        searchInput.value = params.get("search") || "";
        brandFilter.value = params.get("brandsFilter") || "";
        categoryFilter.value = params.get("categoryFilter") || "";
        statusFilter.value = params.get("statusFilter") || "";
        if (sortSelect) {
            sortSelect.value = params.get("sortBy") || "";
        }
    }

    // Initialize filters from URL
    restoreFiltersFromURL();
});
  </script>
</body>
</html>
