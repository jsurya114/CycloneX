<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Forgot Password</title>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css"
      rel="stylesheet"
    />
    <!-- Alpine.js -->
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/alpinejs/3.10.2/cdn.min.js"
      defer
    ></script>
    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  </head>
  <body class="bg-gray-50 min-h-screen flex items-center justify-center p-4">
    <div
      id="app"
      x-data="{
        openModal: false,
        email: '',
        otpValues: ['', '', '', '', '', ''],
        isSubmitting: false,
        token: '',
        otpTimer: 0,
        timerInterval: null,
        // Start the OTP timer (60 seconds)
        startOtpTimer() {
          this.otpTimer = 60;
          if (this.timerInterval) {
            clearInterval(this.timerInterval);
          }
          this.timerInterval = setInterval(() => {
            if (this.otpTimer > 0) {
              this.otpTimer--;
            } else {
              clearInterval(this.timerInterval);
            }
          }, 1000);
        },
        // SweetAlert2 toast notification
        showNotification(message, type) {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: type,
            title: message,
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true
          });
        }
      }"
      class="w-full max-w-md relative"
    >
      <!-- Forgot Password Card -->
      <div class="bg-white rounded-lg shadow-lg overflow-hidden">
        <div class="px-6 py-8">
          <div class="text-center mb-8">
            <h2 class="text-2xl font-bold text-gray-800">Forgot Password</h2>
            <p class="text-gray-600 mt-2">
              Enter your email to reset your password
            </p>
          </div>

          <form
            @submit.prevent="
              isSubmitting = true;
              fetch('/forgotpassword', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ email: email })
              })
                .then((res) => res.json())
                .then((data) => {
                  isSubmitting = false;
                  if (data.success) {
                    token = data.token || '';
                    openModal = true;
                    // Start the OTP timer when modal opens
                    startOtpTimer();
                    showNotification(data.message, 'success');
                  } else {
                    showNotification(data.message, 'error');
                  }
                })
                .catch((err) => {
                  isSubmitting = false;
                  showNotification('Error sending OTP', 'error');
                })
            "
          >
            <div class="mb-6">
              <label
                for="email"
                class="block text-sm font-medium text-gray-700 mb-2"
                >Email Address</label
              >
              <input
                type="email"
                id="email"
                name="email"
                x-model="email"
                class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-200"
                placeholder="your@email.com"
                required
              />
            </div>

            <button
              type="submit"
              class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-4 rounded-lg transition duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 flex justify-center"
              :class="{'opacity-75 cursor-not-allowed': isSubmitting}"
              :disabled="isSubmitting"
            >
              <svg
                x-show="isSubmitting"
                class="animate-spin -ml-1 mr-2 h-5 w-5 text-white"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
              >
                <circle
                  class="opacity-25"
                  cx="12"
                  cy="12"
                  r="10"
                  stroke="currentColor"
                  stroke-width="4"
                ></circle>
                <path
                  class="opacity-75"
                  fill="currentColor"
                  d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                ></path>
              </svg>
              <span x-text="isSubmitting ? 'Sending...' : 'Send Reset Link'"></span>
            </button>
          </form>
        </div>

        <div class="px-6 py-4 bg-gray-50 border-t border-gray-100">
          <p class="text-sm text-center text-gray-600">
            Remember your password?
            <a
              href="/logout"
              class="text-blue-600 hover:text-blue-700 font-medium"
              >Log in</a
            >
          </p>
        </div>
      </div>

      <!-- OTP Modal -->
      <div
        x-show="openModal"
        x-cloak
        class="fixed inset-0 z-50 flex items-center justify-center bg-gray-900 bg-opacity-50 p-4"
        x-transition:enter="transition ease-out duration-300"
        x-transition:enter-start="opacity-0"
        x-transition:enter-end="opacity-100"
        x-transition:leave="transition ease-in duration-200"
        x-transition:leave-start="opacity-100"
        x-transition:leave-end="opacity-0"
      >
        <div
          class="bg-white rounded-lg shadow-xl w-full max-w-md p-6 transform transition-all"
          x-show="openModal"
          x-transition:enter="transition ease-out duration-300"
          x-transition:enter-start="opacity-0 scale-95"
          x-transition:enter-end="opacity-100 scale-100"
          x-transition:leave="transition ease-in duration-200"
          x-transition:leave-start="opacity-100 scale-100"
          x-transition:leave-end="opacity-0 scale-95"
        >
          <div class="text-center">
            <h3 class="text-2xl font-bold text-gray-800">Verify Your Email</h3>
            <p class="mt-2 text-gray-600">
              We've sent a 6-digit code to
              <span class="font-medium" x-text="email"></span>
            </p>
          </div>

          <div class="mt-6">
            <label class="block text-sm font-medium text-gray-700 mb-3">
              Enter the 6-digit code
            </label>
            <div class="flex justify-center space-x-2">
              <template x-for="(digit, index) in otpValues" :key="index">
                <input
                  type="text"
                  maxlength="1"
                  x-model="otpValues[index]"
                  @input="if($event.target.value && index < otpValues.length - 1) $event.target.nextElementSibling?.focus()"
                  @keydown.backspace="if(!$event.target.value && index > 0) { otpValues[index] = ''; $event.target.previousElementSibling.focus() }"
                  class="w-12 h-12 text-center text-xl font-bold border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition"
                />
              </template>
            </div>
          </div>

          <div class="text-center mt-4">
            <p class="text-sm text-gray-600">
              Didn't receive the code?
              <button
                class="text-blue-600 hover:text-blue-700 font-medium"
                :disabled="otpTimer > 0"
                @click="resendOtp(email); startOtpTimer()"
              >
                Resend Code
              </button>
              <span x-show="otpTimer > 0" class="ml-2 text-sm text-gray-500" x-text="'(' + otpTimer + 's)'"></span>
            </p>
          </div>

          <div class="mt-6 flex justify-end space-x-3">
            <button
              type="button"
              class="bg-blue-600 text-white font-medium px-5 py-2 rounded-lg shadow-sm hover:bg-blue-700 transition disabled:opacity-50 disabled:cursor-not-allowed"
              :disabled="otpValues.some(val => val === '')"
              @click="verifyOtp(otpValues.join(''), token)"
            >
              Verify
            </button>
            <button
              type="button"
              class="bg-gray-300 text-gray-700 font-medium px-5 py-2 rounded-lg shadow-sm hover:bg-gray-400 transition"
              @click="openModal = false; otpValues = ['', '', '', '', '', '']"
            >
              Cancel
            </button>
          </div>
        </div>
      </div>
    </div>

    <style>
      [x-cloak] {
        display: none !important;
      }
    </style>

    <!-- Inline Script Tag for OTP Verification and Resend -->
    <script>
      /**
       * Sends a POST request to verify the OTP.
       * On success, redirects the user to the reset password page.
       *
       * @param {string} otp - The concatenated 6-digit OTP.
       * @param {string} token - (Optional) A token if needed for verification.
       */
      function verifyOtp(otp, token) {
        fetch('/verifyAndUpdatePassword', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ otp: otp, token: token })
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.success) {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'success',
                title: data.message,
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true
              });
              setTimeout(() => {
                window.location.href = '/resetpassword';
              }, 3000);
            } else {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'error',
                title: data.message || 'OTP verification failed',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true
              });
            }
          })
          .catch((error) => {
            console.error('Error verifying OTP:', error);
            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'error',
              title: 'Error verifying OTP',
              showConfirmButton: false,
              timer: 3000,
              timerProgressBar: true
            });
          });
      }

      /**
       * Sends a POST request to resend the OTP.
       * On success, shows a toast notification.
       *
       * @param {string} email - The user's email address.
       */
      function resendOtp(email) {
        fetch('/resendOTP', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email: email })
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.success) {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'success',
                title: data.message,
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true
              });
              // Optionally update token if provided
              if (data.token) {
                document.getElementById('app').__x.$data.token = data.token;
              }
            } else {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'error',
                title: data.message || 'Resend OTP failed',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true
              });
            }
          })
          .catch((error) => {
            console.error('Error resending OTP:', error);
            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'error',
              title: 'Error resending OTP',
              showConfirmButton: false,
              timer: 3000,
              timerProgressBar: true
            });
          });
      }
    </script>
  </body>
</html>
