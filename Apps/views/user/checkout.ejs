<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CycloneX - Checkout</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    colors: {
                        primary: {"50":"#f0f9ff","100":"#e0f2fe","200":"#bae6fd","300":"#7dd3fc","400":"#38bdf8","500":"#0ea5e9","600":"#0284c7","700":"#0369a1","800":"#075985","900":"#0c4a6e","950":"#082f49"},
                        secondary: '#f97316',
                        accent: '#8b5cf6',
                        dark: '#0f172a'
                    },
                    animation: {
                        'pulse-slow': 'pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite',
                    },
                    boxShadow: {
                        'soft': '0 4px 20px 0 rgba(0, 0, 0, 0.05)',
                        'hover': '0 10px 25px -5px rgba(0, 0, 0, 0.1)',
                    }
                },
                fontFamily: {
                    'body': ['Poppins', 'ui-sans-serif', 'system-ui', '-apple-system', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'Noto Sans', 'sans-serif'],
                    'sans': ['Poppins', 'ui-sans-serif', 'system-ui', '-apple-system', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'Noto Sans', 'sans-serif']
                }
            }
        }
    </script>
    <style>
        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }
        ::-webkit-scrollbar-track {
            background: #f1f1f1;
        }
        ::-webkit-scrollbar-thumb {
            background: #0ea5e9;
            border-radius: 10px;
        }
        ::-webkit-scrollbar-thumb:hover {
            background: #0284c7;
        }
        
        /* Smooth transitions */
        .checkout-item {
            transition: all 0.3s ease;
        }
        .checkout-item:hover {
            transform: translateY(-2px);
        }
        
        /* Custom radio buttons */
        .custom-radio input[type="radio"] {
            display: none;
        }
        
        .custom-radio .radio-label {
            display: inline-block;
            position: relative;
            padding-left: 30px;
            cursor: pointer;
            line-height: 20px;
        }
        
        .custom-radio .radio-label:before {
            content: "";
            position: absolute;
            left: 0;
            top: 0;
            width: 20px;
            height: 20px;
            border: 2px solid #ddd;
            border-radius: 50%;
            background: #fff;
        }
        
        .custom-radio input[type="radio"]:checked + .radio-label:after {
            content: "";
            position: absolute;
            left: 5px;
            top: 5px;
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background: #0ea5e9;
        }
        
        .custom-radio input[type="radio"]:checked + .radio-label:before {
            border-color: #0ea5e9;
        }
        
        /* Address card hover effect */
        .address-card {
            transition: all 0.3s ease;
        }
        .address-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
        }
        
        /* Payment method card hover effect */
        .payment-card {
            transition: all 0.3s ease;
        }
        .payment-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
        }
        
        /* Progress bar animation */
        .progress-bar-animation {
            transition: width 0.5s ease-in-out;
        }
    </style>
</head>
<body class="font-body bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-white">
    <%- include('partials/header') %>

    <main class="min-h-screen">
        <!-- Checkout Progress Bar -->
        <div class="max-w-4xl mx-auto my-8 bg-white rounded-xl shadow-lg p-4 md:p-6">
            <div class="flex justify-between items-center mb-2">
                <h2 class="text-lg font-semibold text-gray-700">Checkout Progress</h2>
                <span class="text-sm font-medium text-primary-600">Step 2 of 3</span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-2.5">
                <div class="bg-gradient-to-r from-primary-500 to-accent-500 h-2.5 rounded-full progress-bar-animation" style="width: 66%"></div>
            </div>
            <div class="flex justify-between mt-2 text-sm text-gray-600">
                <div class="flex flex-col items-center">
                    <div class="w-8 h-8 rounded-full bg-primary-500 text-white flex items-center justify-center mb-1">
                        <i class="fas fa-check"></i>
                    </div>
                    <span>Cart</span>
                </div>
                <div class="flex flex-col items-center">
                    <div class="w-8 h-8 rounded-full bg-primary-500 text-white flex items-center justify-center mb-1">
                        <span>2</span>
                    </div>
                    <span>Checkout</span>
                </div>
                <div class="flex flex-col items-center">
                    <div class="w-8 h-8 rounded-full bg-gray-300 text-gray-600 flex items-center justify-center mb-1">
                        <span>3</span>
                    </div>
                    <span>Confirmation</span>
                </div>
            </div>
        </div>

        <div class="container mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 pb-24">
            <div class="lg:grid lg:grid-cols-12 lg:gap-x-12 lg:items-start xl:gap-x-16">
                <!-- Checkout Form Section -->
                <section aria-labelledby="checkout-heading" class="lg:col-span-7">
                    <h2 id="checkout-heading" class="sr-only">Checkout details</h2>
                    
                    <!-- Shipping Address Section -->
                    <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-soft overflow-hidden mb-8">
                        <div class="p-6 border-b border-gray-200 dark:border-gray-700">
                            <h3 class="text-xl font-semibold flex items-center">
                                <i class="fas fa-map-marker-alt text-primary-500 mr-2"></i>
                                Shipping Address
                            </h3>
                        </div>
                        
                        <div class="p-6">
                           <!-- Saved Addresses -->
                           <div class="mb-8">
                            <h4 class="text-lg font-semibold text-gray-800 dark:text-white mb-5 border-b border-gray-200 dark:border-gray-700 pb-2">Select a Delivery Address</h4>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-5">
                                <% if(address && address.length > 0) { %>
                                    <% address.forEach((addr, index) => { %>
                                        <!-- Address Card -->
                                        <div class="address-card bg-white dark:bg-gray-800 border-2 rounded-lg shadow-sm hover:shadow-md transition-all duration-300 <%= index === 0 ? 'border-primary-500' : 'border-gray-200 dark:border-gray-700' %> p-5 cursor-pointer relative overflow-hidden group">
                                            <input type="radio" name="address" id="address<%= index %>" class="hidden" <%= index === 0 ? 'checked' : '' %> value="<%= addr._id %>">
                                            <label for="address<%= index %>" class="absolute inset-0 cursor-pointer z-10"></label>
                                            
                                            <!-- Top Section with Badge -->
                                            <div class="flex justify-between items-start mb-3">
                                                <div class="flex items-center space-x-2">
                                                    <span class="<%= index === 0 ? 'bg-primary-500' : 'bg-gray-200 dark:bg-gray-700 group-hover:bg-primary-100 dark:group-hover:bg-gray-600' %> text-<%= index === 0 ? 'white' : 'gray-700 dark:text-gray-300' %> text-xs font-medium px-2.5 py-1 rounded-full transition-colors duration-300"><%= addr.addressType || 'Address' %></span>
                                                    <% if (index === 0) { %>
                                                        <span class="bg-green-100 text-green-700 dark:bg-green-900 dark:text-green-300 text-xs px-2.5 py-1 rounded-full">Default</span>
                                                    <% } %>
                                                </div>
                                                <div class="w-6 h-6 rounded-full border-2 transition-colors duration-300 <%= index === 0 ? 'border-primary-500 bg-primary-50 dark:bg-primary-900' : 'border-gray-300 dark:border-gray-600 group-hover:border-primary-300' %> flex items-center justify-center">
                                                    <div class="w-3 h-3 rounded-full transition-all duration-300 <%= index === 0 ? 'bg-primary-500' : 'bg-transparent group-hover:bg-primary-200 dark:group-hover:bg-primary-800' %>"></div>
                                                </div>
                                            </div>
                                            
                                            <!-- Address Content -->
                                            <div class="mt-2 text-sm text-gray-600 dark:text-gray-400 space-y-1.5">
                                                <p class="font-medium text-gray-800 dark:text-white text-base mb-2"><%= addr.fullname %></p>
                                                
                                                <div class="grid grid-cols-2 gap-x-3 gap-y-1.5">
                                                    <div class="flex items-start space-x-2">
                                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-500 dark:text-gray-400 mt-0.5 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                                                        </svg>
                                                        <span class="line-clamp-1"><%= addr.email %></span>
                                                    </div>
                                                    <div class="flex items-start space-x-2">
                                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-500 dark:text-gray-400 mt-0.5 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                                                        </svg>
                                                        <span><%= addr.mobileNum %></span>
                                                    </div>
                                                </div>
                                                
                                                <div class="mt-3 pt-3 border-t border-gray-100 dark:border-gray-700">
                                                    <div class="flex items-start space-x-2">
                                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-500 dark:text-gray-400 mt-0.5 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                                                        </svg>
                                                        <div>
                                                            <p><%= addr.address %></p>
                                                            <% if (addr.landmark) { %>
                                                                <p class="text-gray-500 dark:text-gray-500 text-xs mt-0.5">Landmark: <%= addr.landmark %></p>
                                                            <% } %>
                                                            <p class="mt-1"><%= addr.state %>, <%= addr.country %> - <%= addr.pincode %></p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <!-- Edit/Select Actions -->
                                            <div class="absolute bottom-0 right-0 opacity-0 group-hover:opacity-100 transition-opacity duration-300 p-2 flex space-x-1">
                                                <button type="button" class="text-xs px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors">
                                                    Edit
                                                </button>
                                                <button type="button" class="text-xs px-2 py-1 bg-primary-50 dark:bg-primary-900 text-primary-600 dark:text-primary-400 rounded hover:bg-primary-100 dark:hover:bg-primary-800 transition-colors">
                                                    Select
                                                </button>
                                            </div>
                                        </div>
                                    <% }); %>
                                <% } else { %>
                                    <div class="col-span-2 text-center p-8 border border-dashed border-gray-300 dark:border-gray-700 rounded-lg bg-gray-50 dark:bg-gray-800/50">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-gray-400 dark:text-gray-500 mb-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                                        </svg>
                                        <p class="text-gray-600 dark:text-gray-400 mb-3">No saved addresses found.</p>
                                      
                                    </div>
                                <% } %>
                            </div>
                            
                            <div class="mt-5 flex justify-center md:justify-start">
                             
                            </div>
                        </div>
                            
                          <!-- Shipping Options -->
<div class="mt-8 border-t border-gray-200 dark:border-gray-700 pt-6">
    <h4 class="text-base font-medium text-gray-800 dark:text-white mb-4">Shipping Method</h4>
    <div class="space-y-3">
        <% if (freeShipping) { %>
            <!-- Free Shipping Notice -->
            <div class="bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-xl p-4 mb-4">
                <div class="flex items-center">
                    <i class="fas fa-gift text-green-500 mr-3 text-lg"></i>
                    <div>
                        <h5 class="font-medium text-gray-800 dark:text-white">Free Shipping</h5>
                        <p class="text-sm text-gray-600 dark:text-gray-400">Your order qualifies for free shipping!</p>
                    </div>
                </div>
            </div>
        <% } %>

        <!-- Standard Shipping -->
        <div class="shipping-option border border-gray-200 dark:border-gray-700 rounded-xl p-4 <%= freeShipping ? 'opacity-50' : 'cursor-pointer hover:border-primary-500 dark:hover:border-primary-500' %> relative">
            <input type="radio" name="shipping" id="standard" class="hidden" <%= (selectedShipping === 'standard' || freeShipping) ? 'checked' : '' %> 
                <%= freeShipping ? 'disabled' : 'onchange="window.location.href=\'?shipping=standard\'"' %>>
            <label for="standard" class="absolute inset-0 <%= freeShipping ? '' : 'cursor-pointer' %>"></label>
            <div class="flex justify-between items-center">
                <div class="flex items-center">
                    <div class="w-5 h-5 rounded-full border-2 <%= (selectedShipping === 'standard' || freeShipping) ? 'border-primary-500' : 'border-gray-300' %> flex items-center justify-center mr-3">
                        <div class="w-3 h-3 rounded-full <%= (selectedShipping === 'standard' || freeShipping) ? 'bg-primary-500' : 'bg-transparent' %>"></div>
                    </div>
                    <div>
                        <h5 class="font-medium text-gray-800 dark:text-white">Standard Shipping</h5>
                        <p class="text-sm text-gray-600 dark:text-gray-400">Delivery in 3-5 business days</p>
                    </div>
                </div>
                <span class="font-medium text-primary-600 dark:text-primary-400"><%= freeShipping ? 'Free' : '₹' + shippingOptions.standard.toFixed(2) %></span>
            </div>
        </div>
        
        <!-- Express Shipping -->
        <div class="shipping-option border border-gray-200 dark:border-gray-700 rounded-xl p-4 <%= freeShipping ? 'opacity-50' : 'cursor-pointer hover:border-primary-500 dark:hover:border-primary-500' %> relative">
            <input type="radio" name="shipping" id="express" class="hidden" <%= selectedShipping === 'express' && !freeShipping ? 'checked' : '' %>
                <%= freeShipping ? 'disabled' : 'onchange="window.location.href=\'?shipping=express\'"' %>>
            <label for="express" class="absolute inset-0 <%= freeShipping ? '' : 'cursor-pointer' %>"></label>
            <div class="flex justify-between items-center">
                <div class="flex items-center">
                    <div class="w-5 h-5 rounded-full border-2 <%= selectedShipping === 'express' && !freeShipping ? 'border-primary-500' : 'border-gray-300' %> flex items-center justify-center mr-3">
                        <div class="w-3 h-3 rounded-full <%= selectedShipping === 'express' && !freeShipping ? 'bg-primary-500' : 'bg-transparent' %>"></div>
                    </div>
                    <div>
                        <h5 class="font-medium text-gray-800 dark:text-white">Express Shipping</h5>
                        <p class="text-sm text-gray-600 dark:text-gray-400">Delivery in 1-2 business days</p>
                    </div>
                </div>
                <span class="font-medium text-primary-600 dark:text-primary-400">₹<%= shippingOptions.express.toFixed(2) %></span>
            </div>
        </div>
        
        <!-- Same Day Delivery -->
        <div class="shipping-option border border-gray-200 dark:border-gray-700 rounded-xl p-4 <%= freeShipping ? 'opacity-50' : 'cursor-pointer hover:border-primary-500 dark:hover:border-primary-500' %> relative">
            <input type="radio" name="shipping" id="sameday" class="hidden" <%= selectedShipping === 'sameDay' && !freeShipping ? 'checked' : '' %>
                <%= freeShipping ? 'disabled' : 'onchange="window.location.href=\'?shipping=sameDay\'"' %>>
            <label for="sameday" class="absolute inset-0 <%= freeShipping ? '' : 'cursor-pointer' %>"></label>
            <div class="flex justify-between items-center">
                <div class="flex items-center">
                    <div class="w-5 h-5 rounded-full border-2 <%= selectedShipping === 'sameDay' && !freeShipping ? 'border-primary-500' : 'border-gray-300' %> flex items-center justify-center mr-3">
                        <div class="w-3 h-3 rounded-full <%= selectedShipping === 'sameDay' && !freeShipping ? 'bg-primary-500' : 'bg-transparent' %>"></div>
                    </div>
                    <div>
                        <h5 class="font-medium text-gray-800 dark:text-white">Same Day Delivery</h5>
                        <p class="text-sm text-gray-600 dark:text-gray-400">Delivery within 24 hours</p>
                    </div>
                </div>
                <span class="font-medium text-primary-600 dark:text-primary-400">₹<%= shippingOptions.sameDay.toFixed(2) %></span>
            </div>
        </div>
        
        <% if (subtotal > 20000) { %>
            <div class="mt-2 text-sm text-green-600 dark:text-green-400">
                <i class="fas fa-check-circle mr-1"></i> Free shipping applied for orders over ₹20,000!
            </div>
        <% } %>
    </div>
</div>
                        </div>
                    </div>
                    
                    <!-- Payment Method Section -->
                    <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-soft overflow-hidden mb-8">
                        <div class="p-6 border-b border-gray-200 dark:border-gray-700">
                            <h3 class="text-xl font-semibold flex items-center">
                                <i class="fas fa-credit-card text-primary-500 mr-2"></i>
                                Payment Method
                            </h3>
                        </div>
                        
                        <div class="p-6">
                            <!-- Payment Options -->
                            <div class="grid grid-cols-2 sm:grid-cols-4 gap-4 mb-6">
                                <!-- Credit/Debit Card -->
                                <!-- <div class="payment-card border border-primary-500 bg-primary-50 dark:bg-primary-900/20 rounded-xl p-4 cursor-pointer relative flex flex-col items-center justify-center h-24">
                                    <input type="radio" name="payment" id="card" class="hidden" checked>
                                    <label for="card" class="absolute inset-0 cursor-pointer"></label>
                                    <i class="fas fa-credit-card text-primary-500 text-2xl mb-2"></i>
                                    <span class="text-sm font-medium text-gray-800 dark:text-white">Card</span>
                                </div> -->
                                
                                <!-- UPI -->
                                <!-- <div class="payment-card border border-gray-200 dark:border-gray-700 rounded-xl p-4 cursor-pointer relative flex flex-col items-center justify-center h-24">
                                    <input type="radio" name="payment" id="upi" class="hidden">
                                    <label for="upi" class="absolute inset-0 cursor-pointer"></label>
                                    <i class="fas fa-mobile-alt text-gray-600 dark:text-gray-400 text-2xl mb-2"></i>
                                    <span class="text-sm font-medium text-gray-800 dark:text-white">UPI</span>
                                </div> -->
                                
                                <!-- Net Banking -->
                                <!-- <div class="payment-card border border-gray-200 dark:border-gray-700 rounded-xl p-4 cursor-pointer relative flex flex-col items-center justify-center h-24">
                                    <input type="radio" name="payment" id="netbanking" class="hidden">
                                    <label for="netbanking" class="absolute inset-0 cursor-pointer"></label>
                                    <i class="fas fa-university text-gray-600 dark:text-gray-400 text-2xl mb-2"></i>
                                    <span class="text-sm font-medium text-gray-800 dark:text-white">Net Banking</span>
                                </div> -->
                                
                                <!-- Cash on Delivery -->
                                <div class="payment-card border border-gray-200 dark:border-gray-700 rounded-xl p-4 cursor-pointer relative flex flex-col items-center justify-center h-24">
                                    <input type="radio" name="payment" id="cod" class="hidden">
                                    <label for="cod" class="absolute inset-0 cursor-pointer"></label>
                                    <i class="fas fa-money-bill-wave text-gray-600 dark:text-gray-400 text-2xl mb-2"></i>
                                    <span class="text-sm font-medium text-gray-800 dark:text-white">Cash on Delivery</span>
                                </div>
                            </div>
                            
                            <!-- Credit Card Form -->
                            <!-- <div id="cardForm" class="mt-6">
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                                    <div>
                                        <label for="cardName" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Name on Card</label>
                                        <input type="text" id="cardName" class="w-full px-4 py-2.5 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white" placeholder="John Doe">
                                    </div>
                                    <div>
                                        <label for="cardNumber" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Card Number</label>
                                        <div class="relative">
                                            <input type="text" id="cardNumber" class="w-full px-4 py-2.5 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white" placeholder="1234 5678 9012 3456">
                                            <div class="absolute right-3 top-2.5 flex space-x-1">
                                                <i class="fab fa-cc-visa text-blue-600 text-lg"></i>
                                                <i class="fab fa-cc-mastercard text-red-500 text-lg"></i>
                                                <i class="fab fa-cc-amex text-blue-500 text-lg"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="grid grid-cols-2 gap-4">
                                    <div>
                                        <label for="expiry" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Expiry Date</label>
                                        <input type="text" id="expiry" class="w-full px-4 py-2.5 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white" placeholder="MM/YY">
                                    </div>
                                    <div>
                                        <label for="cvv" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">CVV</label>
                                        <input type="text" id="cvv" class="w-full px-4 py-2.5 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white" placeholder="123">
                                    </div>
                                </div>
                               
                                <div class="mt-4 flex items-center">
                                    <input type="checkbox" id="saveCard" class="w-4 h-4 text-primary-600 border-gray-300 rounded focus:ring-primary-500">
                                    <label for="saveCard" class="ml-2 text-sm text-gray-700 dark:text-gray-300">Save card for future payments</label>
                                </div>
                            </div> -->
                            
                         
                            <div class="mt-6 flex items-center justify-center p-4 bg-gray-50 dark:bg-gray-800 rounded-lg">
                                <div class="flex items-center text-gray-600 dark:text-gray-400">
                                    <i class="fas fa-lock text-green-500 mr-2"></i>
                                    <span class="text-sm">Your payment information is secure and encrypted</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>

                <!-- Order Summary -->
                <section aria-labelledby="summary-heading" class="mt-8 lg:mt-0 lg:col-span-5">
                    <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-soft overflow-hidden sticky top-8">
                        <div class="p-6 border-b border-gray-200 dark:border-gray-700">
                            <h3 class="text-xl font-semibold flex items-center">
                                <i class="fas fa-receipt text-primary-500 mr-2"></i>
                                Order Summary
                            </h3>
                        </div>
                        
                        <div class="p-6">
                             <!-- Order Summary -->
                <section aria-labelledby="summary-heading" class="mt-8 lg:mt-0 lg:col-span-5">
                    <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-soft overflow-hidden sticky top-8">
                        <div class="p-6 border-b border-gray-200 dark:border-gray-700">
                            <h3 class="text-xl font-semibold flex items-center">
                                <i class="fas fa-receipt text-primary-500 mr-2"></i>
                                Order Summary
                            </h3>
                        </div>
                        
                        <div class="p-6">
                            <!-- Order Items -->
                            
                           <!-- Order Items -->
<div class="space-y-4 mb-6">
    <% if (cart && cart.items && cart.items.length > 0) { %>
        <% cart.items.forEach(item => { %>
            <div class="flex items-start p-3 border border-gray-100 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-750 transition-colors checkout-item">
                <div class="w-16 h-16 rounded-md bg-gray-100 dark:bg-gray-700 overflow-hidden flex-shrink-0">
                    <img src="<%= item.product.mainImage %>" alt="<%= item.product.productName %>" 
                         class="product-image h-full w-full object-cover object-center">
                </div>
                <div class="ml-4 flex-1">
                    <div class="flex justify-between">
                       <a href="/productdetails/<%= item.product._id%>"> <h4 class="text-sm font-medium text-gray-800 dark:text-white"><%= item.product.productName %></h4></a>
                        <p class="text-sm font-medium text-gray-900 dark:text-white">₹<%= item.product.price.toFixed(2) %></p>
                    </div>
                    <div class="flex items-center mt-1">
                        <span class="text-xs text-gray-500 dark:text-gray-400">Brand: <%= item.product.brands ? item.product.brands.name : 'No Brand' %></span>
                    </div>
                    <div class="flex items-center justify-between mt-3">
                        <!-- Quantity Controls -->
                        <div class="flex items-center mt-2">
                            <span class="text-sm text-gray-500 dark:text-gray-400 mr-2">Qty:</span>
                            <div class="flex items-center border border-gray-300 dark:border-gray-600 rounded-lg overflow-hidden">
                                <button type="button" onclick="updateQuantity('<%= item.product._id %>', 'decrement')" 
                                    class="w-8 h-8 flex items-center justify-center bg-gray-100 dark:bg-gray-700 text-gray-600 hover:bg-gray-200 dark:hover:bg-gray-600 dark:text-gray-300">
                                    <i class="fas fa-minus text-xs"></i>
                                </button>
                                <input id="quantity-<%= item.product._id %>" type="number" 
                                    class="w-10 h-8 border-0 bg-white dark:bg-gray-800 text-center text-gray-900 dark:text-white" 
                                    value="<%= item.quantity %>">
                                <button type="button" onclick="updateQuantity('<%= item.product._id %>', 'increment')" 
                                    class="w-8 h-8 flex items-center justify-center bg-gray-100 dark:bg-gray-700 text-gray-600 hover:bg-gray-200 dark:hover:bg-gray-600 dark:text-gray-300">
                                    <i class="fas fa-plus text-xs"></i>
                                </button>
                            </div>
                        </div>
                        <!-- Delete Button -->
                        <button type="button" onclick="removeFromCart('<%= item.product._id %>')" 
                            class="flex items-center text-sm font-medium text-red-600 hover:text-red-500 dark:text-red-400 dark:hover:text-red-300 transition-colors">
                            <i class="far fa-trash-alt mr-1"></i>
                            <span>Remove</span>
                        </button>
                    </div>
                </div>
            </div>
        <% }); %>
    <% } else { %>
        <div class="text-center py-6">
            <p class="text-gray-500">Your cart is empty</p>
            <a href="/shoplist" class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors">
                <i class="fas fa-arrow-left mr-2"></i>
                Continue Shopping
            </a>        </div>
    <% } %>
</div>
                           
<!-- Price Breakdown -->
<dl class="space-y-4 mb-6 border-t border-gray-200 dark:border-gray-700 pt-6">
    <div class="flex items-center justify-between">
        <dt class="text-sm text-gray-600 dark:text-gray-400">Subtotal</dt>
        <dd class="text-sm font-medium text-gray-900 dark:text-white">₹<%= subtotal.toFixed(2) %></dd>
    </div>
    
    <div class="flex items-center justify-between">
        <dt class="text-sm text-gray-600 dark:text-gray-400">
            Shipping
            <% if (freeShipping) { %>
                <span class="ml-2 rounded-full bg-green-100 dark:bg-green-900 py-0.5 px-2 text-xs font-medium text-green-800 dark:text-green-200">FREE</span>
            <% } %>
        </dt>
        <dd class="text-sm font-medium <%= freeShipping ? 'text-green-600 dark:text-green-400' : 'text-gray-900 dark:text-white' %>">
            <% if (freeShipping) { %>
                ₹0.00
            <% } else { %>
                ₹<%= shippingCharge.toFixed(2) %>
            <% } %>
        </dd>
    </div>
    
    <div class="flex items-center justify-between">
        <dt class="text-sm text-gray-600 dark:text-gray-400">Tax</dt>
        <dd class="text-sm font-medium text-gray-900 dark:text-white">₹<%= tax.toFixed(2) %></dd>
    </div>
    
    <div class="flex items-center justify-between">
        <dt class="flex items-center text-sm text-gray-600 dark:text-gray-400">
            <span>Discount</span>
            <span class="ml-2 rounded-full bg-green-100 dark:bg-green-900 py-0.5 px-2 text-xs font-medium text-green-800 dark:text-green-200"><%= discountCode %></span>
        </dt>
        <dd class="text-sm font-medium text-green-600 dark:text-green-400">-₹<%= discount.toFixed(2) %></dd>
    </div>
    
    <div class="flex items-center justify-between border-t border-gray-200 dark:border-gray-700 pt-4">
        <dt class="text-base font-medium text-gray-900 dark:text-white">Total</dt>
        <dd class="text-base font-bold text-primary-600 dark:text-primary-400">₹<%= total.toFixed(2) %></dd>
    </div>
</dl>
                            
                            <!-- Promo Code -->
                            <!-- <div class="mb-6">
                                <div class="flex items-center justify-between mb-2">
                                    <h4 class="text-sm font-medium text-gray-800 dark:text-white">Apply Promo Code</h4>
                                    <span class="text-xs text-gray-500 dark:text-gray-400">Optional</span>
                                </div>
                                <div class="flex space-x-2">
                                    <input type="text" placeholder="Enter code" class="flex-1 min-w-0 block w-full px-3 py-2 text-base border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white">
                                    <button type="button" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors">
                                        Apply
                                    </button>
                                </div>
                            </div> -->
                            
                            <!-- Place Order Button -->
                            <button type="button" id="placeOrderBtn" class="w-full flex items-center justify-center px-6 py-4 border border-transparent text-base font-medium rounded-lg shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors">
                                <i class="fas fa-lock mr-2"></i>
                                Place Order
                            </button>
                            
                            <!-- Terms and Conditions -->
                            <p class="mt-4 text-xs text-gray-500 dark:text-gray-400 text-center">
                                By placing your order, you agree to our 
                                <a href="#" class="text-primary-600 hover:text-primary-500 dark:text-primary-400 dark:hover:text-primary-300">Terms of Service</a> and 
                                <a href="#" class="text-primary-600 hover:text-primary-500 dark:text-primary-400 dark:hover:text-primary-300">Privacy Policy</a>.
                            </p>
                            
                            <!-- Payment Methods -->
                            <div class="mt-6 flex items-center justify-center space-x-4">
                                <i class="fab fa-cc-visa text-2xl text-blue-600"></i>
                                <i class="fab fa-cc-mastercard text-2xl text-red-500"></i>
                                <i class="fab fa-cc-amex text-2xl text-blue-500"></i>
                                <i class="fab fa-cc-paypal text-2xl text-blue-800"></i>
                            </div>
                            
                            <!-- Secure Checkout -->
                            <div class="mt-4 flex items-center justify-center text-xs text-gray-500 dark:text-gray-400">
                                <i class="fas fa-shield-alt mr-1"></i>
                                Secure checkout powered by CycloneX
                            </div>
                        </div>
                    </div>
                </section>
            </div>
            
            <!-- Trust Badges Section -->
            <div class="mt-16 grid grid-cols-1 md:grid-cols-3 gap-6">
                <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm p-6 flex flex-col items-center text-center">
                    <div class="w-16 h-16 bg-primary-100 dark:bg-primary-900/30 rounded-full flex items-center justify-center mb-4">
                        <i class="fas fa-truck text-primary-600 dark:text-primary-400 text-2xl"></i>
                    </div>
                    <h3 class="text-lg font-semibold text-gray-800 dark:text-white mb-2">Free Shipping</h3>
                    <p class="text-sm text-gray-600 dark:text-gray-400">On orders over ₹45000. International shipping available.</p>
                </div>
                
                <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm p-6 flex flex-col items-center text-center">
                    <div class="w-16 h-16 bg-primary-100 dark:bg-primary-900/30 rounded-full flex items-center justify-center mb-4">
                        <i class="fas fa-undo text-primary-600 dark:text-primary-400 text-2xl"></i>
                    </div>
                    <h3 class="text-lg font-semibold text-gray-800 dark:text-white mb-2">30-Day Returns</h3>
                    <p class="text-sm text-gray-600 dark:text-gray-400">Not satisfied? Return within 30 days for a full refund.</p>
                </div>
                
                <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm p-6 flex flex-col items-center text-center">
                    <div class="w-16 h-16 bg-primary-100 dark:bg-primary-900/30 rounded-full flex items-center justify-center mb-4">
                        <i class="fas fa-shield-alt text-primary-600 dark:text-primary-400 text-2xl"></i>
                    </div>
                    <h3 class="text-lg font-semibold text-gray-800 dark:text-white mb-2">Secure Payments</h3>
                    <p class="text-sm text-gray-600 dark:text-gray-400">Your payment information is always protected.</p>
                </div>
            </div>
        </div>
        </section>
    </main>
    
    <%- include('partials/footer') %>

    <!-- Toast container -->
    <div id="toast-container" class="fixed bottom-4 right-4 z-50"></div>



    <script>
        // Function to create a Toastify notification
        function showToast(message, type = 'info') {
            // Create toast container if it doesn't exist
            let toastContainer = document.getElementById('toast-container');
            if (!toastContainer) {
                toastContainer = document.createElement('div');
                toastContainer.id = 'toast-container';
                toastContainer.className = 'fixed bottom-4 right-4 z-50 flex flex-col items-end';
                document.body.appendChild(toastContainer);
            }

            // Create toast element
            const toast = document.createElement('div');
            toast.className = `
                mb-3 px-6 py-4 rounded-lg shadow-lg text-white flex items-center
                ${type === 'error' ? 'bg-red-500' : 'bg-primary-600'}
                transform transition-all duration-300 ease-in-out
                opacity-0 translate-y-8
                max-w-md
            `;

            // Add icon based on type
            const icon = document.createElement('i');
            icon.className = `mr-3 ${type === 'error' ? 'fas fa-exclamation-circle' : 'fas fa-info-circle'}`;
            toast.appendChild(icon);

            // Add message
            const messageEl = document.createElement('span');
            messageEl.textContent = message;
            toast.appendChild(messageEl);

            // Add close button
            const closeBtn = document.createElement('button');
            closeBtn.className = 'ml-auto text-white hover:text-gray-200 focus:outline-none';
            closeBtn.innerHTML = '<i class="fas fa-times"></i>';
            closeBtn.onclick = () => {
                toast.style.opacity = '0';
                toast.style.transform = 'translateY(8rem)';
                setTimeout(() => {
                    toastContainer.removeChild(toast);
                }, 300);
            };
            toast.appendChild(closeBtn);

            // Add toast to container
            toastContainer.appendChild(toast);

            // Trigger animation
            requestAnimationFrame(() => {
                toast.style.opacity = '1';
                toast.style.transform = 'translateY(0)';
            });

            // Remove toast after 5 seconds
            setTimeout(() => {
                if (toast.parentNode === toastContainer) {
                    toast.style.opacity = '0';
                    toast.style.transform = 'translateY(8rem)';
                    setTimeout(() => {
                        if (toast.parentNode === toastContainer) {
                            toastContainer.removeChild(toast);
                        }
                    }, 300);
                }
            }, 5000);
        }

        // Handle payment method selection
        document.addEventListener('DOMContentLoaded', function() {
            const paymentCards = document.querySelectorAll('.payment-card');
            const cardForm = document.getElementById('cardForm');
            
            paymentCards.forEach(card => {
                card.addEventListener('click', function() {
                    // Remove selected class from all cards
                    paymentCards.forEach(c => {
                        c.classList.remove('border-primary-500', 'bg-primary-50', 'dark:bg-primary-900/20');
                        c.classList.add('border-gray-200', 'dark:border-gray-700');
                        const icon = c.querySelector('i');
                        icon.classList.remove('text-primary-500');
                        icon.classList.add('text-gray-600', 'dark:text-gray-400');
                    });
                    
                    // Add selected class to clicked card
                    this.classList.remove('border-gray-200', 'dark:border-gray-700');
                    this.classList.add('border-primary-500', 'bg-primary-50', 'dark:bg-primary-900/20');
                    const icon = this.querySelector('i');
                    icon.classList.remove('text-gray-600', 'dark:text-gray-400');
                    icon.classList.add('text-primary-500');
                    
                    // Show/hide card form
                    if (this.querySelector('input').id === 'card') {
                        cardForm.classList.remove('hidden');
                    } else {
                        cardForm.classList.add('hidden');
                    }
                    
                    // Check the radio button
                    this.querySelector('input').checked = true;
                });
            });
            
            // Handle shipping option selection
            const shippingOptions = document.querySelectorAll('.shipping-option');
            
            shippingOptions.forEach(option => {
                option.addEventListener('click', function() {
                    // Remove selected class from all options
                    shippingOptions.forEach(o => {
                        const radio = o.querySelector('.w-6.h-6');
                        radio.classList.remove('border-primary-500');
                        radio.classList.add('border-gray-300');
                        const dot = radio.querySelector('div');
                        dot.classList.remove('bg-primary-500');
                        dot.classList.add('bg-transparent');
                    });
                    
                    // Add selected class to clicked option
                    const radio = this.querySelector('.w-6.h-6');
                    radio.classList.remove('border-gray-300');
                    radio.classList.add('border-primary-500');
                    const dot = radio.querySelector('div');
                    dot.classList.remove('bg-transparent');
                    dot.classList.add('bg-primary-500');
                    
                    // Check the radio button
                    this.querySelector('input').checked = true;
                });
            });
            
            // Handle address selection
            const addressCards = document.querySelectorAll('.address-card');
            
            addressCards.forEach(card => {
                card.addEventListener('click', function() {
                    // Remove selected class from all cards
                    addressCards.forEach(c => {
                        const radio = c.querySelector('.w-6.h-6');
                        radio.classList.remove('border-primary-500');
                        radio.classList.add('border-gray-300');
                        const dot = radio.querySelector('div');
                        dot.classList.remove('bg-primary-500');
                        dot.classList.add('bg-transparent');
                    });
                    
                    // Add selected class to clicked card
                    const radio = this.querySelector('.w-6.h-6');
                    radio.classList.remove('border-gray-300');
                    radio.classList.add('border-primary-500');
                    const dot = radio.querySelector('div');
                    dot.classList.remove('bg-transparent');
                    dot.classList.add('bg-primary-500');
                    
                    // Check the radio button
                    this.querySelector('input').checked = true;
                });
            });
            
            // Format credit card number
            const cardNumberInput = document.getElementById('cardNumber');
            if (cardNumberInput) {
                cardNumberInput.addEventListener('input', function(e) {
                    let value = e.target.value.replace(/\s+/g, '').replace(/[^0-9]/gi, '');
                    let formattedValue = '';
                    
                    for (let i = 0; i < value.length; i++) {
                        if (i > 0 && i % 4 === 0) {
                            formattedValue += ' ';
                        }
                        formattedValue += value[i];
                    }
                    
                    e.target.value = formattedValue;
                });
            }
            
            // Format expiry date
            const expiryInput = document.getElementById('expiry');
            if (expiryInput) {
                expiryInput.addEventListener('input', function(e) {
                    let value = e.target.value.replace(/\D/g, '');
                    
                    if (value.length > 2) {
                        value = value.substring(0, 2) + '/' + value.substring(2, 4);
                    }
                    
                    e.target.value = value;
                });
            }
            
            // Place order button
            const placeOrderBtn = document.getElementById('placeOrderBtn');
            if (placeOrderBtn) {
                placeOrderBtn.addEventListener('click', async function() {
                 try {

const addressElement = document.querySelector('input[name="address"]:checked')
const paymentMethod = document.querySelector('input[name="payment"]:checked')
console.log("Selected address element:", addressElement); // Debug


const addressId = addressElement?.value
console.log("Selected address ID:", addressId)

if(!paymentMethod){
    showToast("Please select a payment method","error")
    return
}

if(!addressId){
    showToast("Please select a delivery address","error")
}


const items = Array.from(document.querySelectorAll('.checkout-item')).map(item=>{
const productId = item.querySelector('input[id^="quantity-"]').id.replace('quantity-', '');
                const quantity = parseInt(item.querySelector('input[id^="quantity-"]').value);
                const price = parseFloat(item.querySelector('.text-sm.font-medium.text-gray-900').textContent.replace('₹', ''))

return {
    product:productId,
    quantity:quantity,
    subtotal:quantity*price
}
 })
 const totalAmount = parseFloat(document.querySelector('dd.text-base.font-bold').textContent.replace('₹', ''));

//  const addressId = document.querySelector('input[name="selectedAddress"]:checked')?.value
 console.log("Selected address ID:", addressId)
 if(!addressId){
    showToast('Please select a delivery address',true)
    return
 }
 const orderData ={
    items:items,
    totalAmount:totalAmount,
    paymentMethod:'COD',
    paymentStatus:'pending',
    address:addressId

 }
console.log('orderdata',orderData)

const response = await fetch('/orders/cod',{
    method:'POST',
    headers:{
         'Content-Type': 'application/json'
    },
    body:JSON.stringify(orderData)
}) 
console.log(orderData)
const data = await response.json()
console.log('data',data)
if(data.success){
    showToast('Waiting for confrimation')

    setTimeout(() => {
                    window.location.href = `/confirmation`;
                }, 2000);
}else{
    showToast(data.message, true);
}
 } catch (error) {
    console.log(data.message,true)      
    showToast('Failed to place order', true);     
 }
});
            }
            })


     
    </script>
    <script>
    async function removeFromCart(productId) {
               try {
                   const response = await fetch(`/addtocart/${productId}`, {
                       method: 'DELETE',
                   });
                   if (response.ok) {
                       showToast('Item removed from cart', 'info');
                       setTimeout(() => {
                           window.location.reload(); // Reload the page to reflect the changes
                       }, 1000);
                   } else {
                       showToast('Failed to remove item from cart', 'error');
                   }
               } catch (error) {
                   console.error('Error:', error);
                   showToast('An error occurred', 'error');
               }
           }
   
   
        async function updateQuantity(productId, action) {
               const quantityInput = document.getElementById(`quantity-${productId}`);
               let quantity = parseInt(quantityInput.value);
   
               if (action === 'increment') {
                   quantity += 1;
               } else if (action === 'decrement' && quantity > 1) {
                   quantity -= 1;
               }
   
               try {
                   const response = await fetch(`/checkout/${productId}`, {
                       method: 'PUT',
                       headers: {
                           'Content-Type': 'application/json',
                       },
                       body: JSON.stringify({ quantity }),
                   });
                   const data = await response.json();
                   
                   if (data.success) {
                       // Show success toast before reloading
                       showToast('Cart updated successfully', 'info');
                       setTimeout(() => {
                           window.location.reload(); // Reload the page to reflect the changes
                       }, 1000);
                   } else {
                       // Show toast only for stock unavailability
                       if (data.message.includes('stock') || data.message.includes('available')) {
                           showToast(data.message, 'error');
                       }
                   }
               } catch (error) {
                   console.error('Error:', error);
                   showToast('An error occurred', 'error');
               }
           }
   
           document.addEventListener('DOMContentLoaded', function() {
       // Check if free shipping is applied
       const freeShipping = <%= freeShipping %>;
       
       // Handle shipping option selection
       const shippingOptions = document.querySelectorAll('.shipping-option');
       
       if (freeShipping) {
           // If free shipping is applied, disable all shipping options
           shippingOptions.forEach(option => {
               option.classList.add('opacity-50', 'cursor-not-allowed');
               option.classList.remove('cursor-pointer', 'hover:border-primary-500');
               
               // Disable the radio inputs
               const radioInput = option.querySelector('input[type="radio"]');
               if (radioInput) {
                   radioInput.disabled = true;
                   radioInput.onchange = null; // Remove event handler
               }
               
               // Remove the clickable label
               const label = option.querySelector('label');
               if (label) {
                   label.classList.remove('cursor-pointer');
               }
           });
           
           // Make sure standard shipping is selected for free shipping
           const standardRadio = document.getElementById('standard');
           if (standardRadio) {
               standardRadio.checked = true;
           }
       } else {
           // Only add event listeners if shipping is not free
           shippingOptions.forEach(option => {
               option.addEventListener('click', function() {
                   const radioInput = this.querySelector('input[type="radio"]');
                   if (radioInput) {
                       radioInput.checked = true;
                       window.location.href = '?shipping=' + radioInput.id;
                   }
               });
           });
       }
   });
   </script>
</body>
</html>




