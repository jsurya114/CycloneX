<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Add Your Review</title>
        <!-- Tailwind CSS CDN link -->
        <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" rel="stylesheet">
        <!-- Font Awesome -->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">
        <!-- Alpine.js -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/alpinejs/3.10.2/cdn.min.js" defer></script>
        <!-- jQuery -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
        <!-- Toastify CSS -->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.12.0/toastify.min.css">
        <!-- Toastify JS -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.12.0/toastify.js"></script>
    </head>
    
<body class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-8 max-w-5xl">
        <!-- Header -->
        <div class="text-center mb-8">
            <h1 class="text-3xl font-bold text-indigo-600">Your Experience</h1>
            <div class="mt-2 w-16 h-1 bg-indigo-500 mx-auto rounded-full"></div>
        </div>

        <!-- Product Preview -->
        <div class="bg-white rounded-lg shadow-sm p-4 mb-6 flex flex-col md:flex-row items-center">
            <div class="md:w-1/5 mb-4 md:mb-0">
                <div class="bg-gray-100 rounded-lg h-24 w-24 flex items-center justify-center overflow-hidden">
                    <img src="/<%=product.mainImage %>" alt="<%= product.productName %>" class="object-cover w-full h-full">
                </div>
            </div>
            <div class="md:w-4/5 md:pl-4 text-center md:text-left">
                <h2 class="text-xl font-semibold text-gray-800"><%= product.productName %></h2>
                <p class="text-gray-700" id="product-description"><%= product.description || 'No description available.' %></p>
                <div class="inline-block px-2 py-1 bg-indigo-100 text-indigo-800 text-xs rounded-full mt-1"><%= product.category %></div>
            </div>
        </div>

        <div class="flex flex-col lg:flex-row gap-6">
            <!-- Left Side: Review Form -->
            <div class="lg:w-1/2" id="reviewFormSection">
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <h2 class="text-lg font-semibold text-gray-800 mb-4">Your Review</h2>
                    <form id="reviewForm" class="space-y-4">
                        <input type="hidden" id="userId" name="user" value="<%= user._id %>">
                        <input type="hidden" id="orderId" name="order" value="<%=order.orderId %>">
                        <input type="hidden" id="productId" name="product" value="<%= product._id %>">
                        
                        <!-- Rating Selection -->
                        <div x-data="{ rating: 0, hoverRating: 0 }" class="mb-4">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Your Rating</label>
                            <div class="flex items-center">
                                <template x-for="i in 5">
                                    <div class="mr-1 relative">
                                        <button 
                                            type="button"
                                            class="text-3xl focus:outline-none transition-all duration-200 transform hover:scale-110" 
                                            :class="(i <= rating) ? 'text-yellow-400' : (i <= hoverRating) ? 'text-yellow-200' : 'text-gray-300'"
                                            @click="rating = i"
                                            @mouseenter="hoverRating = i"
                                            @mouseleave="hoverRating = 0"
                                            x-html="(i <= rating || i <= hoverRating) ? '★' : '☆'">
                                        </button>
                                    </div>
                                </template>
                                <input type="hidden" id="rating" name="rating" x-model="rating">
                                
                                <!-- Rating label -->
                                <span 
                                    class="ml-3 text-sm transition-opacity duration-200"
                                    :class="rating > 0 ? 'opacity-100' : 'opacity-0'"
                                    x-text="rating === 1 ? 'Poor' : rating === 2 ? 'Fair' : rating === 3 ? 'Good' : rating === 4 ? 'Very Good' : rating === 5 ? 'Excellent' : ''">
                                </span>
                            </div>
                            
                            <!-- Rating hint -->
                            <p class="mt-1 text-xs text-gray-500" x-show="!rating">
                                Click on a star to rate this product
                            </p>
                        </div>
                        
                        <!-- Review Text -->
                        <div>
                            <textarea 
                                id="description" 
                                name="description" 
                                rows="4" 
                                class="w-full px-3 py-2 border border-gray-200 rounded-lg focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500"
                                placeholder="Share your thoughts about this product..."></textarea>
                        </div>
                        
                        <!-- Submit Button -->
                        <div class="flex justify-end">
                            <button 
                                type="submit" 
                                class="bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition duration-200 text-sm">
                                Submit
                            </button>
                        </div>
                    </form>
                    
                    <!-- Mini Guidelines -->
                    <div class="mt-4 text-xs text-gray-500">
                        <p>Be honest and specific. Focus on the product features and your experience.</p>
                    </div>
                </div>
            </div>
            
            <!-- Right Side: Submitted Reviews -->
            <div class="lg:w-1/2" id="submittedReviewsSection">
                <div class="bg-white rounded-lg shadow-sm p-6 h-full">
                    <h2 class="text-lg font-semibold text-gray-800 mb-4">Your Submitted Reviews</h2>
                    
                   
                  <!-- Reviews List Section -->
<div id="reviewsList" class="space-y-4">
    <% if (reviews.length > 0) { %>
        <% reviews.forEach(review => { %>
            <div class="p-3 border border-gray-100 rounded-lg bg-gray-50">
                <div class="flex items-center mb-2">
                    <div class="text-sm">
                        <% for (let i = 0; i < review.rating; i++) { %>
                            <i class="fas fa-star text-yellow-400"></i>
                        <% } %>
                        <% for (let i = review.rating; i < 5; i++) { %>
                            <i class="far fa-star text-gray-300"></i>
                        <% } %>
                    </div>
                    <div class="ml-auto text-xs text-gray-400">
                        <%= new Date(review.createdAt).toLocaleDateString() %>
                    </div>
                </div>
                <p class="text-gray-700 text-sm"><%= review.description %></p>
                <p class="text-xs text-gray-500">- <%= review.user.name %></p>
            </div>
        <% }) %>
    <% } else { %>
        <div id="noReviewsMessage" class="py-8 text-center">
            <div class="text-gray-400 mb-2">
                <i class="fas fa-comment-slash text-3xl"></i>
            </div>
            <p class="text-gray-500">You haven't submitted any reviews yet.</p>
        </div>
    <% } %>
</div>

                    <!-- Add Another Review Button (hidden by default on larger screens, shows on mobile after submission) -->
                    <div class="mt-4 text-center lg:hidden">
                        <button 
                            id="writeAnotherReviewBtn"
                            class="text-indigo-600 hover:text-indigo-800 text-sm font-medium hidden">
                            <i class="fas fa-plus-circle mr-1"></i> Add Another Review
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

<script>
// Function to show toast messages
function showToast(message, isSuccess = true) {
    Toastify({
        text: message,
        duration: 3000,
        gravity: "bottom",
        position: "center",
        backgroundColor: isSuccess ? "#4CAF50" : "#F44336",
        stopOnFocus: true,
        className: "rounded-lg",
        style: {
            boxShadow: "0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)"
        }
    }).showToast();
}

// Function to add submitted review to the list
function addReviewToList(rating, description) {
    // Generate stars for the rating
    const starsHtml = Array(5).fill().map((_, i) => 
        i < rating ? '<i class="fas fa-star text-yellow-400"></i>' : '<i class="far fa-star text-gray-300"></i>'
    ).join('');
    
    // Create review element
    const reviewElement = document.createElement('div');
    reviewElement.className = 'p-3 border border-gray-100 rounded-lg bg-gray-50';
    reviewElement.innerHTML = `
        <div class="flex items-center mb-2">
            <div class="text-sm">${starsHtml}</div>
            <div class="ml-auto text-xs text-gray-400">${new Date().toLocaleDateString()}</div>
        </div>
        <p class="text-gray-700 text-sm">${description}</p>
    `;
    
    // Get the reviews list
    const reviewsList = document.getElementById('reviewsList');
    
    // Remove the no reviews message if it exists
    const noReviewsMessage = document.getElementById('noReviewsMessage');
    if (noReviewsMessage) {
        noReviewsMessage.remove();
    }
    
    // Add the review to the top of the list
    reviewsList.prepend(reviewElement);
    
    // Show the "Add Another Review" button on mobile
    document.getElementById('writeAnotherReviewBtn').classList.remove('hidden');
}

// Event listener for the review form submission
document.getElementById('reviewForm').addEventListener('submit', async function (e) {
    e.preventDefault();

    const userId = document.getElementById('userId').value;
    const productId = document.getElementById('productId').value;
    const orderId = document.getElementById('orderId').value;
    const rating = document.getElementById('rating').value;
    const description = document.getElementById('description').value;

    if (!rating || rating < 1 || rating > 5) {
        showToast("Please select a rating", false);
        return;
    }

    if (!description.trim()) {
        showToast("Please enter your review", false);
        return;
    }

    const reviewData = {
        user: userId,
        product: productId,
        rating: parseInt(rating),
        description
    };

    try {
        const response = await fetch(`/review/${productId}/${orderId}`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(reviewData)
        });

        const data = await response.json();

        if (data.success) {
            showToast("Review submitted successfully!", true);
            

      
            // Add the review to the list
            addReviewToList(parseInt(rating), description);
            
            // Reset the form
            document.getElementById('reviewForm').reset();
            
            // Reset Alpine.js rating
            const ratingComponent = Alpine.evaluate(document.querySelector('[x-data]'), 'rating');
            if (ratingComponent) {
                ratingComponent.rating = 0;
            }
            
            // On mobile, scroll to the reviews section
            if (window.innerWidth < 1024) {
                document.getElementById('submittedReviewsSection').scrollIntoView({ behavior: 'smooth' });
            }
        } else {
            showToast("Failed to submit review: " + data.message, false);
        }
    } catch (error) {
        console.error("Error submitting review:", error);
        showToast("An error occurred. Please try again.", false);
    }
});



// Event listener for "Add Another Review" button (mobile only)
document.getElementById('writeAnotherReviewBtn').addEventListener('click', function() {
    // On mobile, scroll back to the form
    document.getElementById('reviewFormSection').scrollIntoView({ behavior: 'smooth' });
});

// For demo purposes - you can remove or modify this part
document.addEventListener('DOMContentLoaded', function() {
    // Example: Set hidden fields with actual data
    // This is just for testing, as your template should already populate these values
    if (!document.getElementById('userId').value) {
        document.getElementById('userId').value = '6060c5b5e123e41234567890';
    }
    if (!document.getElementById('productId').value) {
        document.getElementById('productId').value = '6060c5b5e123e41234567891';
    }
});
</script>
</body>
</html>



