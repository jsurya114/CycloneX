<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CycloneX Reset Password</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
</head>
<body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen flex items-center justify-center p-4">
    <div class="w-full max-w-md">
        <!-- Card container with subtle shadow and rounded corners -->
        <div class="bg-white rounded-xl shadow-xl overflow-hidden">
            <!-- Top header with gradient -->
            <div class="bg-gradient-to-r from-blue-500 to-indigo-600 px-6 py-4 text-white">
                <h2 class="text-2xl font-bold flex items-center">
                    <i class="fas fa-lock mr-3"></i>
                    Reset Your Password
                </h2>
                <p class="text-blue-100 mt-1">Create a strong new password for your account</p>
            </div>

            <!-- Form section -->
            <form id="resetPasswordForm" class="px-6 py-8 space-y-6">
                <!-- Password field -->
                <div class="space-y-2">
                    <label for="password" class="block text-sm font-medium text-gray-700">New Password</label>
                    <div class="relative">
                        <input type="password" id="password" name="password" 
                            class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-all"
                            placeholder="Enter your new password" required>
                        <span id="togglePassword" class="absolute right-3 top-3 text-gray-400 cursor-pointer">
                            <i class="far fa-eye"></i>
                        </span>
                    </div>
                    <div class="text-xs text-gray-500 mt-1">
                        Use at least 8 characters with a mix of letters, numbers & symbols
                    </div>
                </div>

                <!-- Confirm Password field -->
                <div class="space-y-2">
                    <label for="confirmpassword" class="block text-sm font-medium text-gray-700">Confirm Password</label>
                    <div class="relative">
                        <input type="password" id="confirmpassword" name="confirmpassword" 
                            class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-all"
                            placeholder="Confirm your new password" required>
                        <span id="toggleConfirmPassword" class="absolute right-3 top-3 text-gray-400 cursor-pointer">
                            <i class="far fa-eye"></i>
                        </span>
                    </div>
                </div>

                <!-- Password strength indicator -->
                <div class="space-y-2">
                    <p class="text-sm text-gray-600">Password Strength</p>
                    <div class="w-full bg-gray-200 rounded-full h-2">
                        <div id="passwordStrength" class="bg-red-500 h-2 rounded-full w-0 transition-all duration-300"></div>
                    </div>
                    <p id="strengthText" class="text-xs text-gray-500">Password not entered</p>
                </div>

                <!-- Submit button -->
                <button type="submit" id="resetBtn" 
                    class="w-full bg-gradient-to-r from-blue-600 to-indigo-600 text-white py-3 rounded-lg font-medium hover:from-blue-700 hover:to-indigo-700 transition-all shadow-md flex items-center justify-center space-x-2">
                    <span>Reset Password</span>
                    <i class="fas fa-arrow-right"></i>
                </button>
            </form>

            <!-- Status message display area -->
            <div id="statusMessage" class="hidden px-6 py-4 border-t border-gray-100"></div>
        </div>

        <!-- Additional security note -->
        <div class="mt-6 flex items-start space-x-3 text-gray-600 text-sm">
            <i class="fas fa-shield-alt mt-1 text-blue-500"></i>
            <p>Your password is securely encrypted and we never store your password in plain text format.</p>
        </div>
    </div>

    <!-- JavaScript for functionality -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('resetPasswordForm');
            const passwordInput = document.getElementById('password');
            const confirmPasswordInput = document.getElementById('confirmpassword');
            const togglePassword = document.getElementById('togglePassword');
            const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
            const passwordStrength = document.getElementById('passwordStrength');
            const strengthText = document.getElementById('strengthText');
            const statusMessage = document.getElementById('statusMessage');
            const resetBtn = document.getElementById('resetBtn');

            // Toggle password visibility
            togglePassword.addEventListener('click', function() {
                const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordInput.setAttribute('type', type);
                this.querySelector('i').classList.toggle('fa-eye');
                this.querySelector('i').classList.toggle('fa-eye-slash');
            });

            toggleConfirmPassword.addEventListener('click', function() {
                const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                confirmPasswordInput.setAttribute('type', type);
                this.querySelector('i').classList.toggle('fa-eye');
                this.querySelector('i').classList.toggle('fa-eye-slash');
            });

            // Check password strength
            passwordInput.addEventListener('input', function() {
                const password = this.value;
                let strength = 0;
                let color = 'red';
                let message = 'Weak';

                if (password.length > 0) {
                    // Length check
                    if (password.length >= 8) strength += 25;
                    
                    // Character type checks
                    if (/[A-Z]/.test(password)) strength += 25;
                    if (/[0-9]/.test(password)) strength += 25;
                    if (/[^A-Za-z0-9]/.test(password)) strength += 25;

                    // Set color and message based on strength
                    if (strength <= 25) {
                        color = 'red';
                        message = 'Weak';
                    } else if (strength <= 50) {
                        color = 'orange';
                        message = 'Fair';
                    } else if (strength <= 75) {
                        color = 'yellow';
                        message = 'Good';
                    } else {
                        color = 'green';
                        message = 'Strong';
                    }
                } else {
                    message = 'Password not entered';
                }

                // Update the UI
                passwordStrength.style.width = strength + '%';
                passwordStrength.className = `bg-${color}-500 h-2 rounded-full transition-all duration-300`;
                strengthText.textContent = message;
            });

            // Form submission
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                // Show loading state
                resetBtn.disabled = true;
                resetBtn.innerHTML = '<svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> Processing...';
                
                // Get form data
                const password = passwordInput.value;
                const confirmpassword = confirmPasswordInput.value;

                // Validate passwords match
                if (password !== confirmpassword) {
                    showStatus('Passwords do not match', 'error');
                    resetBtn.disabled = false;
                    resetBtn.innerHTML = '<span>Reset Password</span><i class="fas fa-arrow-right"></i>';
                    return;
                }

                // Send data to the server
                fetch('/resetpassword', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ password, confirmpassword }),
                    credentials: 'include' // Important to include cookies for JWT
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showStatus(data.message, 'success');
                        form.reset();
                        console.log(data)
                        // Redirect after successful password reset (optional)
                        setTimeout(() => {
                            window.location.href = '/'; // Redirect to login page
                        }, 3000);
                    } else {
                        showStatus(data.message, 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showStatus('An error occurred. Please try again.', 'error');
                })
                .finally(() => {
                    resetBtn.disabled = false;
                    resetBtn.innerHTML = '<span>Reset Password</span><i class="fas fa-arrow-right"></i>';
                });
            });

            // Function to show status messages
            function showStatus(message, type) {
                statusMessage.textContent = message;
                statusMessage.className = 'px-6 py-4 border-t border-gray-100 text-center';
                
                if (type === 'success') {
                    statusMessage.classList.add('bg-green-50', 'text-green-700');
                } else if (type === 'error') {
                    statusMessage.classList.add('bg-red-50', 'text-red-700');
                }
                
                statusMessage.style.display = 'block';
            }
        });
    </script>
</body>
</html>