<!DOCTYPE html>
<html lang="en" class="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CycloneX ProductDetails</title>
    
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Plus+Jakarta+Sans:wght@400;500;600;700&display=swap" rel="stylesheet">

    <!-- Tailwind Configuration -->
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    colors: {
                        primary: '#3B82F6',
                        secondary: '#10B981',
                        accent: '#60A5FA',
                        dark: '#1E293B',
                        light: '#F8FAFC',
                        card: {
                            blue: '#DBEAFE',
                            purple: '#EDE9FE',
                            green: '#DCFCE7',
                            pink: '#FCE7F3',
                            orange: '#FFEDD5'
                        },
                        'card-dark': {
                            blue: '#1E3A8A',
                            purple: '#5B21B6',
                            green: '#166534',
                            pink: '#831843',
                            orange: '#7C2D12'
                        }
                    },
                    fontFamily: {
                        'sans': ['Inter', 'sans-serif'],
                        'heading': ['Plus Jakarta Sans', 'sans-serif']
                    },
                    boxShadow: {
                        'custom': '0 10px 25px -5px rgba(0, 0, 0, 0.05), 0 8px 10px -6px rgba(0, 0, 0, 0.02)',
                        'card': '0 10px 15px -3px rgba(0, 0, 0, 0.08), 0 4px 6px -2px rgba(0, 0, 0, 0.03)',
                        'hover': '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)'
                    }
                }
            }
        }
    </script>

    <!-- Custom Styles -->
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #F8FAFC;
            transition: background-color 0.3s ease;
        }

        .dark body {
            background-color: #0F172A;
            color: #F8FAFC;
        }

        h1, h2, h3, h4, h5, h6 {
            font-family: 'Plus Jakarta Sans', sans-serif;
        }

        /* Custom scrollbar for Webkit browsers */
        ::-webkit-scrollbar {
            width: 6px;
            height: 6px;
        }
        
        ::-webkit-scrollbar-track {
            background: #F1F5F9;
            border-radius: 8px;
        }
        
        .dark ::-webkit-scrollbar-track {
            background: #1E293B;
        }
        
        ::-webkit-scrollbar-thumb {
            background: #CBD5E1;
            border-radius: 8px;
        }
        
        .dark ::-webkit-scrollbar-thumb {
            background: #475569;
        }
        
        ::-webkit-scrollbar-thumb:hover {
            background: #94A3B8;
        }
        
        .dark ::-webkit-scrollbar-thumb:hover {
            background: #64748B;
        }

        /* Product image zoom effect - only on desktop */
        .zoom-container {
            position: relative;
            overflow: hidden;
        }
        
        @media (min-width: 768px) {
            .zoom-image {
                transition: transform 0.5s ease;
            }
            
            .zoom-container:hover .zoom-image {
                transform: scale(1.1);
            }
        }
        
        /* Wishlist button animation */
        @keyframes heartBeat {
            0% { transform: scale(1); }
            14% { transform: scale(1.3); }
            28% { transform: scale(1); }
            42% { transform: scale(1.3); }
            70% { transform: scale(1); }
        }
        
        .wishlist-animation {
            animation: heartBeat 1s;
        }
        
        /* Tab styling */
        .tab-button {
            @apply px-4 py-3 font-medium text-gray-600 dark:text-gray-300 border-b-2 border-transparent hover:text-primary dark:hover:text-primary transition-colors duration-200;
        }
        
        .tab-button.active {
            @apply text-primary dark:text-primary border-primary;
        }
        
        /* Toast notification */
        #toast {
            position: fixed;
            bottom: 2rem;
            left: 50%;
            transform: translateX(-50%) translateY(100px);
            background-color: #0F172A;
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
            z-index: 50;
            opacity: 0;
            transition: transform 0.3s ease, opacity 0.3s ease;
        }
        
        .dark #toast {
            background-color: #334155;
        }
        
        #toast.show {
            transform: translateX(-50%) translateY(0);
            opacity: 1;
        }
        
        #toast.error {
            background-color: #EF4444;
        }
        
        /* Dark mode toggle button */
        .dark-mode-toggle {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 46px;
            height: 46px;
            border-radius: 50%;
            background: #3B82F6;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            z-index: 40;
            transition: all 0.3s ease;
        }
        
        .dark-mode-toggle:hover {
            transform: scale(1.1);
        }
        
        .dark-mode-toggle i {
            font-size: 1.25rem;
            transition: transform 0.5s ease;
        }
        
        .dark-mode-toggle:hover i {
            transform: rotate(30deg);
        }

        /* Product thumbnails grid for mobile */
        .product-thumbnails {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(70px, 1fr));
            gap: 8px;
        }

        @media (min-width: 640px) {
            .product-thumbnails {
                grid-template-columns: repeat(auto-fill, minmax(90px, 1fr));
                gap: 12px;
            }
        }

        /* Responsive adjustments */
        @media (max-width: 767px) {
            .tab-button {
                @apply px-3 py-2 text-sm;
            }
            
            /* Hide zoom container on mobile */
            #zoomWrapper {
                display: none !important;
            }
        }

        /* Active thumbnail indicator */
        .thumbnail-active {
            border: 2px solid #3B82F6;
        }
    </style>
</head>
<body class="text-gray-800 dark:text-gray-100">
    <!-- Header -->
    <%- include('partials/header') %>
    
    <!-- Breadcrumbs -->
    <div class="bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/10 dark:to-indigo-900/10 py-4 md:py-6">
        <div class="container mx-auto px-4 sm:px-6 lg:px-8">
            <h1 class="text-2xl md:text-3xl font-heading font-bold text-gray-900 dark:text-white mb-2 relative">
                Product Details
                <span class="absolute -bottom-2 left-0 w-16 h-1 bg-primary rounded-full"></span>
            </h1>
            <div class="flex items-center text-gray-500 dark:text-gray-400 mt-4">
                <%- include('partials/breadcrumbs') %>
            </div>
        </div>
    </div>

    <!-- Product Details Section -->
    <main class="container mx-auto px-4 sm:px-6 lg:px-8 py-6 md:py-8">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8">
            <!-- Product Images -->
            <div class="space-y-4">
                <!-- Main Image and Zoom Container Wrapper -->
                <div class="relative">
                    <!-- Main Image -->
                    <div class="bg-white dark:bg-gray-800 p-4 shadow-lg rounded-lg overflow-hidden group zoom-container">
                        <img id="mainImage" src="/<%= product.mainImage %>" alt="<%= product.productName %>" class="w-full h-auto rounded-lg zoom-image">
                    </div>
                    
                    <!-- Zoom Container (appears on hover - desktop only) -->
                    <div id="zoomWrapper" class="hidden absolute top-0 left-full ml-4 w-96 h-96 border border-gray-300 dark:border-gray-700 overflow-hidden rounded-lg bg-white dark:bg-gray-800 shadow-xl" style="backdrop-filter: blur(5px);">
                        <div id="zoomContainer" class="w-full h-full bg-no-repeat bg-center" style="background-size: 200%;"></div>
                    </div>

                    <!-- Wishlist Button -->
                    <button 
                        onclick="addToWishlist('<%= product._id %>', this)" 
                        class="absolute top-4 right-4 bg-white dark:bg-gray-700 p-2 rounded-full shadow-md hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors duration-200 wishlist-btn"
                        aria-label="Add to wishlist"
                        data-product-id="<%= product._id %>"
                    >
                        <svg 
                            xmlns="http://www.w3.org/2000/svg" 
                            width="20" 
                            height="20" 
                            viewBox="0 0 24 24" 
                            fill="none" 
                            stroke="currentColor" 
                            stroke-width="2" 
                            stroke-linecap="round" 
                            stroke-linejoin="round" 
                            class="wishlist-icon text-gray-500 dark:text-gray-300 transition-colors duration-200"
                            data-product-id="<%= product._id %>"
                        >
                            <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                        </svg>
                    </button>
                </div>
                
                <!-- Sub Images - Grid layout for mobile and desktop -->
                <div class="product-thumbnails">
                    <% product.images.forEach((image, index) => { %>
                        <div class="bg-white dark:bg-gray-800 p-2 shadow-md rounded-lg overflow-hidden hover:shadow-lg transition-shadow duration-300 thumbnail-container">
                            <img 
                                src="/<%= image %>" 
                                alt="Product Image" 
                                class="w-full h-auto aspect-square object-cover rounded-lg cursor-pointer thumbnail"
                                onclick="updateMainImage(this.src, this)"
                                data-index="<%= index %>"
                            >
                        </div>
                    <% }) %>
                    <div class="bg-white dark:bg-gray-800 p-2 shadow-md rounded-lg overflow-hidden hover:shadow-lg transition-shadow duration-300 thumbnail-container">
                        <img 
                            src="/<%= product.mainImage %>" 
                            alt="Product Image" 
                            class="w-full h-auto aspect-square object-cover rounded-lg cursor-pointer thumbnail thumbnail-active"
                            onclick="updateMainImage(this.src, this)"
                            data-index="main"
                        >
                    </div>
                </div>
            </div>
            
            <!-- Product Details -->
            <div class="bg-white dark:bg-gray-800 p-4 md:p-6 shadow-lg rounded-lg">
                <h1 class="text-xl md:text-2xl font-bold text-gray-800 dark:text-white"><%= product.productName %></h1>
                <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">Brand: <span class="font-semibold"><%= product.brands.name %></span></p>
                
                <div class="mt-4">
                    <span class="text-2xl md:text-3xl font-bold text-primary">₹<%= salePrice.toFixed(2) %></span>
                    <span class="text-sm text-gray-500 dark:text-gray-400 ml-2">(Inclusive of all taxes)</span>
                </div>

                <!-- Offers & Discounts Section -->
                <div class="mt-4 space-y-3">
                    <!-- Discount Badge -->
                    <% if(product.discount) { %>
                        <div class="inline-flex items-center bg-red-100 dark:bg-red-900/30 px-3 py-1 rounded-full">
                            <span class="text-red-600 dark:text-red-400 font-semibold"><%= maxOffer %>% Off</span>
                        </div>
                    <% } %>

                    <!-- Coupons Section -->
                    <div class="border border-green-200 dark:border-green-900/30 rounded-lg p-3 bg-green-50 dark:bg-green-900/10">
                        <h3 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Available Offers</h3>
                        <ul class="space-y-2">
                            <% if(product.coupon) { %>
                                <li class="flex items-center">
                                    <span class="inline-block w-5 h-5 mr-2">
                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-600 dark:text-green-400">
                                            <path d="M20 6L9 17l-5-5"></path>
                                        </svg>
                                    </span>
                                    <p class="text-sm text-gray-700 dark:text-gray-300">
                                        <span class="font-semibold text-green-700 dark:text-green-400">COUPON: <%= product.coupon %></span> 
                                        - Use code at checkout
                                    </p>
                                </li>
                            <% } %>
                            <!-- Additional offers can be added here -->
                            <li class="flex items-center">
                                <span class="inline-block w-5 h-5 mr-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-600 dark:text-green-400">
                                        <path d="M20 6L9 17l-5-5"></path>
                                    </svg>
                                </span>
                                <p class="text-sm text-gray-700 dark:text-gray-300">
                                    <span class="font-semibold">Maximum Offer:</span> 
                                    <%= maxOffer %>% for this product
                                </p>
                            </li>
                            <li class="flex items-center">
                                <span class="inline-block w-5 h-5 mr-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-600 dark:text-green-400">
                                        <path d="M20 6L9 17l-5-5"></path>
                                    </svg>
                                </span>
                                <p class="text-sm text-gray-700 dark:text-gray-300">
                                    <span class="font-semibold">Special:</span> 
                                    Free delivery on orders above ₹20000
                                </p>
                            </li>
                        </ul>
                        <button class="mt-2 text-sm text-green-700 dark:text-green-400 font-medium hover:text-green-800 dark:hover:text-green-300 flex items-center">
                            View more offers
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>
                    </div>
                </div>

                <div class="mt-4">
                    <span class="text-sm text-gray-700 dark:text-gray-300">Availability:</span>
                    <span class="text-sm font-semibold <%= product.stock > 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400' %>">
                        <%= product.stock %> products <%= product.stock > 0 ? 'In Stock' : 'Out of Stock' %>
                    </span>
                </div>
                
                <div class="mt-4 md:mt-6">
                    <h3 class="text-lg font-semibold text-gray-800 dark:text-white">Description</h3>
                    <p class="text-sm text-gray-600 dark:text-gray-300 mt-2"><%= product.description %></p>
                </div>
                
                <div class="mt-4 md:mt-6 flex flex-col sm:flex-row items-center gap-3 sm:gap-4"> 
                    <button onclick="addToCart('<%= product._id %>')" 
                        class="w-full sm:w-auto flex items-center justify-center gap-2 px-4 py-2 bg-primary text-white rounded-lg shadow-md hover:shadow-lg transform hover:-translate-y-1 transition-all duration-300 group">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transition-transform duration-300 group-hover:scale-110" fill="none" viewBox="0 0 24 24" stroke="currentColor">                 
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                        </svg>             
                        <span class="font-medium">Add to Cart</span>         
                    </button>         
                
                    <a href="/checkout" class="w-full sm:w-auto"> 
                        <button class="w-full px-6 py-2 bg-green-600 text-white rounded-lg shadow-md hover:bg-green-700 transition-all duration-300">
                            Buy Now
                        </button>   
                    </a>  
                </div>
            </div>
        </div>

        <!-- Tabs Section -->
        <div class="mt-6 md:mt-8 bg-white dark:bg-gray-800 rounded-xl shadow-sm overflow-hidden">
            <div class="border-b border-gray-100 dark:border-gray-700">
                <div class="flex overflow-x-auto">
                    <button class="tab-button active" onclick="openTab(event, 'details')">Product Details</button>
                    <button class="tab-button" onclick="openTab(event, 'reviews')">Reviews</button>
                    <button class="tab-button" onclick="openTab(event, 'shipping')">Shipping & Returns</button>
                </div>
            </div>
            
            <!-- Tab Content -->
            <div class="p-4 md:p-6">
                <!-- Product Details Tab -->
                <div id="details" class="tab-content">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            <h3 class="text-lg font-semibold mb-3 text-gray-800 dark:text-white">Specifications</h3>
                            <table class="w-full text-sm">
                                <tbody>
                                    <tr class="border-b border-gray-100 dark:border-gray-700">
                                        <td class="py-2 text-gray-500 dark:text-gray-400">Brand</td>
                                        <td class="py-2 font-medium text-gray-800 dark:text-white"><%= product.brands.name %></td>
                                    </tr>
                                    <tr class="border-b border-gray-100 dark:border-gray-700">
                                        <td class="py-2 text-gray-500 dark:text-gray-400">Model</td>
                                        <td class="py-2 font-medium text-gray-800 dark:text-white"><%= product.productName %></td>
                                    </tr>
                                    <tr class="border-b border-gray-100 dark:border-gray-700">
                                        <td class="py-2 text-gray-500 dark:text-gray-400">Stock</td>
                                        <td class="py-2 font-medium text-gray-800 dark:text-white"><%= product.stock %> units</td>
                                    </tr>
                                    <!-- Add more specifications as needed -->
                                </tbody>
                            </table>
                        </div>
                        <div>
                            <h3 class="text-lg font-semibold mb-3 text-gray-800 dark:text-white">Features</h3>
                            <ul class="space-y-2 text-sm">
                                <li class="flex items-start">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary mr-2 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Premium quality materials</span>
                                </li>
                                <li class="flex items-start">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary mr-2 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Durable construction</span>
                                </li>
                                <li class="flex items-start">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary mr-2 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Ergonomic design for comfort</span>
                                </li>
                                <!-- Add more features as needed -->
                            </ul>
                        </div>
                    </div>
                </div>
                
                <!-- Reviews Tab (hidden by default) -->
                <div id="reviews" class="tab-content hidden">
                    <div class="flex items-center mb-4">
                        <div class="flex items-center mr-4">
                            <% if(review && review.length > 0) { %>
                                <span class="text-3xl font-bold text-gray-900 dark:text-white mr-2">4.5</span>
                                <div class="flex text-yellow-400">
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star-half-alt"></i>
                                </div>
                            <% } %>
                        </div>
                        <span class="text-sm text-gray-500 dark:text-gray-400">Based on <%= review ? review.length : 0 %> reviews</span>
                    </div>
                    
                    <% if(review && review.length > 0) { %>
                        <% review.forEach(reviewItem => { %>
                            <!-- Review Item -->
                            <div class="border-t border-gray-100 dark:border-gray-700 py-4">
                                <div class="flex items-start">
                                    <div class="flex-shrink-0 mr-4">
                                        <div class="w-10 h-10 rounded-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center text-gray-600 dark:text-gray-300 font-medium">
                                            <%= reviewItem.user && reviewItem.user.name ? reviewItem.user.name.charAt(0).toUpperCase() : 'U' %>
                                        </div>
                                    </div>
                                    <div>
                                        <div class="flex items-center mb-1">
                                            <h4 class="font-medium text-gray-900 dark:text-white mr-2"><%= reviewItem.user ? reviewItem.user.name : 'Anonymous' %></h4>
                                            <span class="text-xs text-gray-500 dark:text-gray-400"><%= new Date(reviewItem.createdAt).toLocaleDateString() %></span>
                                        </div>
                                        <div class="flex text-yellow-400 text-sm mb-2">
                                            <% for(let i = 1; i <= 5; i++) { %>
                                                <% if(i <= reviewItem.rating) { %>
                                                    <i class="fas fa-star"></i>
                                                <% } else { %>
                                                    <i class="far fa-star"></i>
                                                <% } %>
                                            <% } %>
                                        </div>
                                        <p class="text-sm text-gray-700 dark:text-gray-300"><%= reviewItem.description %></p>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="text-center py-8">
                            <p class="text-gray-500 dark:text-gray-400">No reviews yet. Be the first to review this product!</p>
                        </div>
                    <% } %>
                    
                    <% if(review && review.length > 3) { %>
                        <button class="mt-4 text-primary font-medium text-sm hover:text-primary/80 transition-colors duration-200">
                            Load more reviews
                        </button>
                    <% } %>
                </div>
                
                <!-- Shipping Tab (hidden by default) -->
                <div id="shipping" class="tab-content hidden">
                    <div class="space-y-4">
                        <div>
                            <h3 class="text-lg font-semibold mb-2 text-gray-800 dark:text-white">Shipping Information</h3>
                            <p class="text-sm text-gray-600 dark:text-gray-300">We offer free shipping on all orders above ₹1000. Standard delivery takes 3-5 business days.</p>
                        </div>
                        <div>
                            <h3 class="text-lg font-semibold mb-2 text-gray-800 dark:text-white">Return Policy</h3>
                            <p class="text-sm text-gray-600 dark:text-gray-300">If you're not satisfied with your purchase, you can return it within 30 days for a full refund or exchange.</p>
                        </div>
                        <div>
                            <h3 class="text-lg font-semibold mb-2 text-gray-800 dark:text-white">Warranty</h3>
                            <p class="text-sm text-gray-600 dark:text-gray-300">This product comes with a 1-year manufacturer warranty covering defects in materials and workmanship.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Related Products Section -->
        <div class="mt-8 md:mt-12">
            <h2 class="text-xl md:text-2xl font-bold text-gray-800 dark:text-white mb-4 md:mb-6">Related Products</h2>
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6">
                <% if (relatedProducts && relatedProducts.length > 0) { %>
                    <% relatedProducts.forEach(product => { %>
                        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm overflow-hidden group">
                            <div class="relative">
                                <a href="/productdetails/<%= product._id %>" class="block w-full h-full"> 
                                    <img 
                                        src="/<%= product.mainImage %>" 
                                        alt="<%= product.productName %>" 
                                        class="w-full h-48 md:h-64 object-contain object-center group-hover:scale-105 transition-transform duration-300"
                                    >
                                </a>
                                <div class="absolute top-4 left-4">
                                    <span class="bg-blue-500 text-white px-2 py-1 rounded-full text-sm font-semibold">
                                        <%= product.brands ? product.brands.name : 'No Brand' %>
                                    </span>
                                </div>
                                <!-- Wishlist Button -->
                                <button 
                                    onclick="addToWishlist('<%= product._id %>', this)" 
                                    class="absolute top-4 right-4 bg-white dark:bg-gray-700 p-2 rounded-full shadow-md hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors duration-200 wishlist-btn"
                                    aria-label="Add to wishlist"
                                    data-product-id="<%= product._id %>"
                                >
                                    <svg 
                                        xmlns="http://www.w3.org/2000/svg" 
                                        width="20" 
                                        height="20" 
                                        viewBox="0 0 24 24" 
                                        fill="none" 
                                        stroke="currentColor" 
                                        stroke-width="2" 
                                        stroke-linecap="round" 
                                        stroke-linejoin="round" 
                                        class="wishlist-icon text-gray-500 dark:text-gray-300 transition-colors duration-200"
                                        data-product-id="<%= product._id %>"
                                    >
                                        <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                                    </svg>
                                </button>
                            </div>
                            <div class="p-4">
                                <a href="/productdetails/<%= product._id %>" class="text-base font-medium text-gray-800 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 transition-colors line-clamp-2"> 
                                    <h3 class="text-lg font-semibold mb-2"><%= product.productName %></h3>
                                </a>
                               
                                <div class="flex items-center mb-2">
                                    <div class="flex text-yellow-400">
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star-half-alt"></i>
                                    </div>
                                    <span class="text-gray-500 dark:text-gray-400 text-sm ml-2">(4.5)</span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-xl font-bold text-primary">₹<%= product.price %></span>
                                    <button onclick="addToCart('<%= product._id %>')" 
                                        class="flex items-center justify-center gap-2 px-4 py-2 bg-primary text-white rounded-lg shadow-md hover:shadow-lg transform hover:-translate-y-1 transition-all duration-300 group">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transition-transform duration-300 group-hover:scale-110" fill="none" viewBox="0 0 24 24" stroke="currentColor">                 
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                                        </svg>             
                                        <span class="font-medium">Add</span>         
                                    </button>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                <% } else { %>
                    <div class="col-span-full">
                        <div class="p-8 md:p-12 text-center bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 md:h-16 md:w-16 mx-auto text-gray-400 dark:text-gray-500 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16" />
                            </svg>
                            <p class="text-gray-500 dark:text-gray-400 text-lg mb-4">No related products found.</p>
                            <button onclick="window.location.href='/shoplist'" class="bg-primary text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-all duration-300 flex items-center gap-2 mx-auto">
                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="m15 18-6-6 6-6"/>
                                </svg>
                                Back to All Products
                            </button>
                        </div>
                    </div>
                <% } %>
            </div>
        </div>
    </main>

    <!-- Toast Notification -->
    <div id="toast">
        <span id="toast-message"></span>
    </div>

    <!-- Dark Mode Toggle Button -->
    <button id="darkModeToggle" class="dark-mode-toggle">
        <i class="fas fa-moon dark:hidden"></i>
        <i class="fas fa-sun hidden dark:block"></i>
    </button>

    <!-- Footer -->
    <%- include('partials/footer') %>

    <script>
        // Store wishlist items in localStorage for persistence
        let wishlistItems = JSON.parse(localStorage.getItem('wishlistItems')) || [];

        // Dark mode toggle functionality
        document.addEventListener('DOMContentLoaded', function() {
            const darkModeToggle = document.getElementById('darkModeToggle');
            const html = document.documentElement;
            
            // Check for saved theme preference or use system preference
            if (localStorage.getItem('darkMode') === 'true' || 
                (!localStorage.getItem('darkMode') && 
                window.matchMedia('(prefers-color-scheme: dark)').matches)) {
                html.classList.add('dark');
            }
            
            // Toggle dark mode
            darkModeToggle.addEventListener('click', function() {
                html.classList.toggle('dark');
                localStorage.setItem('darkMode', html.classList.contains('dark'));
            });

            // Initialize wishlist icons on page load
            initializeWishlistIcons();
        });

        function showToast(message, isError = false) {
            const toast = document.getElementById('toast');
            const toastMessage = document.getElementById('toast-message');

            toastMessage.textContent = message;
            
            if (isError) {
                toast.classList.add('error');
            } else {
                toast.classList.remove('error');
            }
            
            toast.classList.add('show');

            setTimeout(() => {
                toast.classList.remove('show');
            }, 3000); // Hide after 3 seconds
        }

        function addToWishlist(productId, button) {
            // Get the SVG element inside the button
            const wishlistIcon = button.querySelector('.wishlist-icon');
            const path = wishlistIcon.querySelector('path');
            
            // Check if it's already in wishlist
            const isInWishlist = wishlistItems.includes(productId);
            
            if (isInWishlist) {
                // Remove from wishlist
                fetch(`/wishlist/${productId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    credentials: 'include'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Update UI immediately
                        wishlistIcon.classList.remove('text-red-500');
                        wishlistIcon.classList.add('text-gray-500', 'dark:text-gray-300');
                        if (path) path.setAttribute('fill', 'none');
                        
                        // Update localStorage
                        wishlistItems = wishlistItems.filter(item => item !== productId);
                        localStorage.setItem('wishlistItems', JSON.stringify(wishlistItems));
                        
                        // Update all instances of this product's wishlist icon
                        updateAllWishlistIcons(productId, false);
                        
                        showToast('Product removed from wishlist!');
                    } else {
                        showToast(data.message || 'Failed to remove from wishlist', true);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('An error occurred.', true);
                });
            } else {
                // Add to wishlist
                fetch('/wishlist', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        productId
                    }),
                    credentials: 'include'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Update UI immediately
                        wishlistIcon.classList.remove('text-gray-500', 'dark:text-gray-300');
                        wishlistIcon.classList.add('text-red-500');
                        button.classList.add('wishlist-animation');
                        if (path) path.setAttribute('fill', 'currentColor');
                        
                        // Update localStorage
                        if (!wishlistItems.includes(productId)) {
                            wishlistItems.push(productId);
                            localStorage.setItem('wishlistItems', JSON.stringify(wishlistItems));
                        }
                        
                        // Update all instances of this product's wishlist icon
                        updateAllWishlistIcons(productId, true);
                        
                        // Remove animation class after animation completes
                        setTimeout(() => {
                            button.classList.remove('wishlist-animation');
                        }, 1000);
                        
                        showToast('Product added to wishlist!');
                    } else {
                        showToast(data.message || 'Failed to add to wishlist', true);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('An error occurred.', true);
                });
            }
        }

        // Update all wishlist icons for a specific product
        function updateAllWishlistIcons(productId, isInWishlist) {
            const allIcons = document.querySelectorAll(`.wishlist-icon[data-product-id="${productId}"]`);
            
            allIcons.forEach(icon => {
                const path = icon.querySelector('path');
                
                if (isInWishlist) {
                    icon.classList.remove('text-gray-500', 'dark:text-gray-300');
                    icon.classList.add('text-red-500');
                    if (path) path.setAttribute('fill', 'currentColor');
                } else {
                    icon.classList.remove('text-red-500');
                    icon.classList.add('text-gray-500', 'dark:text-gray-300');
                    if (path) path.setAttribute('fill', 'none');
                }
            });
        }

        // Initialize wishlist icons on page load
        function initializeWishlistIcons() {
            // Check if user is logged in (has a token cookie)
            const hasCookie = document.cookie.split(';').some(item => item.trim().startsWith('token='));
            
            // Get all wishlist icons
            const wishlistIcons = document.querySelectorAll('.wishlist-icon');
            
            // First, apply any locally stored wishlist items
            wishlistIcons.forEach(icon => {
                const productId = icon.dataset.productId;
                const path = icon.querySelector('path');
                
                if (wishlistItems.includes(productId)) {
                    icon.classList.remove('text-gray-500', 'dark:text-gray-300');
                    icon.classList.add('text-red-500');
                    if (path) path.setAttribute('fill', 'currentColor');
                }
            });
            
            // If logged in, fetch server wishlist and update
            if (hasCookie) {
                fetch('/wishlistStatus', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    credentials: 'include'
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success && Array.isArray(data.wishlistItems)) {
                        // Update localStorage with server data
                        wishlistItems = data.wishlistItems;
                        localStorage.setItem('wishlistItems', JSON.stringify(wishlistItems));
                        
                        // Update all wishlist icons
                        wishlistIcons.forEach(icon => {
                            const productId = icon.dataset.productId;
                            const path = icon.querySelector('path');
                            
                            if (data.wishlistItems.includes(productId)) {
                                icon.classList.remove('text-gray-500', 'dark:text-gray-300');
                                icon.classList.add('text-red-500');
                                if (path) path.setAttribute('fill', 'currentColor');
                            } else {
                                icon.classList.remove('text-red-500');
                                icon.classList.add('text-gray-500', 'dark:text-gray-300');
                                if (path) path.setAttribute('fill', 'none');
                            }
                        });
                    }
                })
                .catch(error => {
                    console.error('Error fetching wishlist status:', error);
                });
            }
        }

        function addToCart(productId) {
            fetch('/addtocart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    productId: productId,
                    quantity: 1 // Default quantity
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast('Product added to cart!');
                    
                    // Update cart count in header if it exists
                    const cartCountElement = document.querySelector('.fa-shopping-cart + span');
                    if (cartCountElement) {
                        const currentCount = parseInt(cartCountElement.textContent);
                        cartCountElement.textContent = currentCount + 1;
                    }
                } else {
                    showToast(data.message || 'Failed to add product to cart', true);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('An error occurred.', true);
            });
        }

        function updateMainImage(src, thumbnail) {
            // Update main image
            document.getElementById('mainImage').src = src;
            
            // Only update zoom container if not on mobile
            if (window.innerWidth >= 768) {
                document.getElementById('zoomContainer').style.backgroundImage = "url(" + src + ")";
            }
            
            // Update active thumbnail
            document.querySelectorAll('.thumbnail').forEach(el => {
                el.classList.remove('thumbnail-active');
            });
            
            if (thumbnail) {
                thumbnail.classList.add('thumbnail-active');
            }
        }

        // Image zoom functionality - only enable on desktop
        const mainImage = document.getElementById('mainImage');
        const zoomWrapper = document.getElementById('zoomWrapper');
        const zoomContainer = document.getElementById('zoomContainer');

        if (mainImage && zoomWrapper && zoomContainer) {
            // Check if device is not mobile
            const isMobile = () => window.innerWidth < 768;
            
            // Only add zoom functionality on desktop
            if (!isMobile()) {
                mainImage.addEventListener('mouseenter', function(){
                    zoomContainer.style.backgroundImage = "url(" + mainImage.src + ")";
                    zoomWrapper.classList.remove('hidden');
                });

                mainImage.addEventListener('mousemove', function(e){
                    const rect = mainImage.getBoundingClientRect();
                    const x = e.clientX - rect.left;
                    const y = e.clientY - rect.top;
                    const xPercent = (x / rect.width) * 100;
                    const yPercent = (y / rect.height) * 100;
                    zoomContainer.style.backgroundPosition = xPercent + "% " + yPercent + "%";
                });

                mainImage.addEventListener('mouseleave', function(){
                    zoomWrapper.classList.add('hidden');
                });
            }
            
            // Handle window resize to disable zoom on mobile
            window.addEventListener('resize', function() {
                if (isMobile()) {
                    zoomWrapper.classList.add('hidden');
                }
            });
        }
        
        // Tab functionality
        function openTab(evt, tabName) {
            // Hide all tab content
            const tabContents = document.getElementsByClassName("tab-content");
            for (let i = 0; i < tabContents.length; i++) {
                tabContents[i].classList.add("hidden");
            }
            
            // Remove active class from all tab buttons
            const tabButtons = document.getElementsByClassName("tab-button");
            for (let i = 0; i < tabButtons.length; i++) {
                tabButtons[i].classList.remove("active");
            }
            
            // Show the selected tab content and mark button as active
            document.getElementById(tabName).classList.remove("hidden");
            evt.currentTarget.classList.add("active");
        }
    </script>
</body>
</html>