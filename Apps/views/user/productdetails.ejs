<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>CycloneX</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
        <script>
            tailwind.config = {
                theme: {
                    extend: {
                        colors: {
                            primary: '#2563eb',
                            secondary: '#f97316',
                            dark: '#0f172a'
                        },
                        fontFamily: {
                            sans: ['Inter', 'sans-serif']
                        }
                    }
                }
            }
        </script>
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
        <style type="text/tailwindcss">
            @layer components {
                .btn-primary {
                    @apply bg-primary text-white px-6 py-3 rounded-md hover:bg-blue-700 transition duration-300 font-medium shadow-md hover:shadow-lg transform hover:-translate-y-0.5;
                }
                .btn-secondary {
                    @apply bg-secondary text-white px-6 py-3 rounded-md hover:bg-orange-600 transition duration-300 font-medium shadow-md hover:shadow-lg transform hover:-translate-y-0.5;
                }
                .product-card {
                    @apply bg-white rounded-lg shadow-md overflow-hidden transition-all duration-300 hover:shadow-xl;
                }
                .product-image-container {
                    @apply relative overflow-hidden;
                }
                .product-image {
                    @apply w-full h-48 object-cover transition-transform duration-500;
                }
                .product-card:hover .product-image {
                    @apply transform scale-110;
                }
                .quick-view-btn {
                    @apply absolute bottom-0 left-0 right-0 bg-primary text-white py-2 text-center opacity-0 transition-opacity duration-300;
                }
                .product-card:hover .quick-view-btn {
                    @apply opacity-100;
                }
                .star-rating {
                    @apply flex text-yellow-400;
                }
                .modal {
                    @apply fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300;
                }
                .modal.active {
                    @apply opacity-100 pointer-events-auto;
                }
                .modal-content {
                    @apply bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-auto transform scale-95 transition-transform duration-300;
                }
                .modal.active .modal-content {
                    @apply scale-100;
                }
                .price-slider {
                    @apply w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer;
                }
                .price-slider::-webkit-slider-thumb {
                    @apply appearance-none w-6 h-6 rounded-full bg-primary cursor-pointer;
                }
                .category-card {
                    @apply transition-all duration-300 hover:-translate-y-2;
                }
                .banner-text {
                    @apply text-5xl md:text-6xl font-bold mb-6 leading-tight tracking-tight;
                }
                .banner-subtitle {
                    @apply text-xl md:text-2xl mb-8 max-w-xl font-light;
                }
                .thumbnail {
                    @apply border-2 border-transparent rounded-md overflow-hidden transition-all duration-200;
                }
                .thumbnail.active {
                    @apply border-primary;
                }
                .thumbnail:hover {
                    @apply border-blue-300;
                }
                .badge {
                    @apply inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium;
                }
                .badge-discount {
                    @apply bg-red-100 text-red-800;
                }
                .badge-instock {
                    @apply bg-green-100 text-green-800;
                }
                .badge-outstock {
                    @apply bg-red-100 text-red-800;
                }
                .tab-button {
                    @apply px-4 py-2 font-medium text-gray-600 border-b-2 border-transparent hover:text-primary transition-colors duration-200;
                }
                .tab-button.active {
                    @apply text-primary border-primary;
                }
            }
        </style>
    </head>
<body class="bg-gray-100">
    <!-- Header -->
    <%- include('partials/header') %>
    <%- include('partials/breadcrumbs') %>
    <!-- Product Details Section -->
    <main class="container mx-auto px-6 py-8">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
            <!-- Product Images -->
            <div class="space-y-4">
                <!-- Main Image and Zoom Container Wrapper -->
                <div class="relative">
                    <!-- Main Image -->
                    <div class="bg-white p-4 shadow-lg rounded-lg overflow-hidden group">
                        <img id="mainImage" src="/<%= product.mainImage %>" alt="Main Product Image" class="w-full h-auto rounded-lg">

                    </div>
                    <!-- Zoom Container (appears on hover) -->
                    <div id="zoomWrapper" class="hidden absolute top-0 left-full ml-4 w-96 h-96 border border-gray-300 overflow-hidden" style="backdrop-filter: blur(5px);">
                        <div id="zoomContainer" class="w-full h-full bg-no-repeat bg-center" style="background-size: 200%;"></div>
                    </div>

                     <!-- Wishlist Button -->
                     <button 
                     onclick="addToWishlist('<%= product._id %>', this)" 
                     class="absolute top-4 right-4 bg-white p-2 rounded-full shadow-md hover:bg-gray-100 transition-colors duration-200"
                     aria-label="Add to wishlist"
                 >
                     <svg 
                         xmlns="http://www.w3.org/2000/svg" 
                         width="20" 
                         height="20" 
                         viewBox="0 0 24 24" 
                         fill="none" 
                         stroke="currentColor" 
                         stroke-width="2" 
                         stroke-linecap="round" 
                         stroke-linejoin="round" 
                         class="wishlist-icon text-gray-500 hover:text-red-500 transition-colors duration-200"
                         data-product-id="<%= product._id %>"
                     >
                         <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                     </svg>
                 </button>
                </div>
                <!-- Sub Images -->
                <div class="grid grid-cols-4 gap-4">
                    <% product.images.forEach(image => { %>
                        <div class="bg-white p-2 shadow-md rounded-lg">
                            <img src="/<%= image %>" alt="Sub Image" class="w-full h-auto rounded-lg cursor-pointer"
                                onclick="updateMainImage(this.src)">
                        </div>
                    <% }) %>
                    <div class="bg-white p-2 shadow-md rounded-lg">
                        <img src="/<%= product.mainImage %>" alt="Sub Image" class="w-full h-auto rounded-lg cursor-pointer"
                            onclick="updateMainImage(this.src)">
                    </div>
                </div>
            </div>
            <!-- Product Details -->
            <!-- Product Details -->
<div class="bg-white p-6 shadow-lg rounded-lg">
    <h1 class="text-2xl font-bold text-gray-800"><%= product.productName %></h1>
    <p class="text-sm text-gray-500 mt-2">Brand: <span class="font-semibold"><%= product.brands.name %></span></p>
    <div class="mt-4">
        <span class="text-3xl font-bold text-gray-800">₹<%= product.price %></span>
        <span class="text-sm text-gray-500 ml-2">(Inclusive of all taxes)</span>
    </div>

    <!-- Offers & Discounts Section -->
    <div class="mt-4 space-y-3">
        <!-- Discount Badge -->
        <% if(product.discount) { %>
            <div class="inline-flex items-center bg-red-100 px-3 py-1 rounded-full">
                <span class="text-red-600 font-semibold"><%= product.discount %>% Off</span>
            </div>
        <% } %>

        <!-- Coupons Section -->
        <div class="border border-green-200 rounded-lg p-3 bg-green-50">
            <h3 class="text-sm font-medium text-gray-700 mb-2">Available Offers</h3>
            <ul class="space-y-2">
                <% if(product.coupon) { %>
                    <li class="flex items-center">
                        <span class="inline-block w-5 h-5 mr-2">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-600">
                                <path d="M20 6L9 17l-5-5"></path>
                            </svg>
                        </span>
                        <p class="text-sm">
                            <span class="font-semibold text-green-700">COUPON: <%= product.coupon %></span> 
                            - Use code at checkout
                        </p>
                    </li>
                <% } %>
                <!-- Additional offers can be added here -->
                <li class="flex items-center">
                    <span class="inline-block w-5 h-5 mr-2">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-600">
                            <path d="M20 6L9 17l-5-5"></path>
                        </svg>
                    </span>
                    <p class="text-sm">
                        <span class="font-semibold">Bank Offer:</span> 
                        10% off on HDFC Bank Credit Cards, up to ₹1500
                    </p>
                </li>
                <li class="flex items-center">
                    <span class="inline-block w-5 h-5 mr-2">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-600">
                            <path d="M20 6L9 17l-5-5"></path>
                        </svg>
                    </span>
                    <p class="text-sm">
                        <span class="font-semibold">Special:</span> 
                        Free delivery on orders above ₹20000
                    </p>
                </li>
            </ul>
            <button class="mt-2 text-sm text-green-700 font-medium hover:text-green-800 flex items-center">
                View more offers
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
            </button>
        </div>
    </div>

    <div class="mt-4">
        <span class="text-sm text-gray-700">Availability:</span>
        <span class="text-sm font-semibold <%= product.stock > 0 ? 'text-green-600' : 'text-red-600' %>">
            <%= product.stock %> products <%= product.stock > 0 ? 'In Stock' : 'Out of Stock' %>
        </span>
    </div>
    <div class="mt-6">
        <h3 class="text-lg font-semibold text-gray-800">Description</h3>
        <p class="text-sm text-gray-600 mt-2"><%= product.description %></p>
    </div>
    <div class="mt-6 flex items-center gap-4"> 
        <button onclick="addToCart('<%= product._id %>')" 
            class="flex items-center justify-center gap-2 px-4 py-2 bg-primary text-white rounded-lg shadow-md hover:shadow-lg transform hover:-translate-y-1 transition-all duration-300 group">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transition-transform duration-300 group-hover:scale-110" fill="none" viewBox="0 0 24 24" stroke="currentColor">                 
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
            </svg>             
            <span class="font-medium">Add to Cart</span>         
        </button>         
    
       <a href="/checkout/<%= product._id %>"> <button class="px-6 py-2 bg-green-600 text-white rounded-lg shadow-md hover:bg-green-700 transition-all duration-300">
            Buy Now
        </button>   
    </a>  
    </div>
    
</div>
        </div>

      <!-- Tabs Section -->
      <div class="mt-6 bg-white rounded-xl shadow-sm overflow-hidden">
        <div class="border-b border-gray-100">
            <div class="flex overflow-x-auto">
                <button class="tab-button active" onclick="openTab(event, 'details')">Product Details</button>
                <button class="tab-button" onclick="openTab(event, 'reviews')">Reviews</button>
                <button class="tab-button" onclick="openTab(event, 'shipping')">Shipping & Returns</button>
            </div>
        </div>
        
        <!-- Tab Content -->
        <div class="p-4 md:p-6">
            <!-- Product Details Tab -->
            <div id="details" class="tab-content">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <h3 class="text-lg font-semibold mb-3">Specifications</h3>
                        <table class="w-full text-sm">
                            <tbody>
                                <tr class="border-b border-gray-100">
                                    <td class="py-2 text-gray-500">Brand</td>
                                    <td class="py-2 font-medium"><%= product.brands.name %></td>
                                </tr>
                                <tr class="border-b border-gray-100">
                                    <td class="py-2 text-gray-500">Model</td>
                                    <td class="py-2 font-medium"><%= product.productName %></td>
                                </tr>
                                <tr class="border-b border-gray-100">
                                    <td class="py-2 text-gray-500">Stock</td>
                                    <td class="py-2 font-medium"><%= product.stock %> units</td>
                                </tr>
                                <!-- Add more specifications as needed -->
                            </tbody>
                        </table>
                    </div>
                    <div>
                        <h3 class="text-lg font-semibold mb-3">Features</h3>
                        <ul class="space-y-2 text-sm">
                            <li class="flex items-start">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary mr-2 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                </svg>
                                <span>Premium quality materials</span>
                            </li>
                            <li class="flex items-start">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary mr-2 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                </svg>
                                <span>Durable construction</span>
                            </li>
                            <li class="flex items-start">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary mr-2 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                </svg>
                                <span>Ergonomic design for comfort</span>
                            </li>
                            <!-- Add more features as needed -->
                        </ul>
                    </div>
                </div>
            </div>
            
            <!-- Reviews Tab (hidden by default) -->
         <!-- Reviews Tab (hidden by default) -->
<div id="reviews" class="tab-content hidden">
    <div class="flex items-center mb-4">
        <div class="flex items-center mr-4">
            <span class="text-3xl font-bold text-gray-900 mr-2">4.5</span>
            <div class="flex text-yellow-400">
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="fas fa-star-half-alt"></i>
            </div>
        </div>
        <span class="text-sm text-gray-500">Based on <%= review.length %> reviews</span>
    </div>
    
    <% if(review && review.length > 0) { %>
        <% review.forEach(reviewItem => { %>
            <!-- Review Item -->
            <div class="border-t border-gray-100 py-4">
                <div class="flex items-start">
                    <div class="flex-shrink-0 mr-4">
                        <div class="w-10 h-10 rounded-full bg-gray-200 flex items-center justify-center text-gray-600 font-medium">
                            <%= reviewItem.user && reviewItem.user.name ? reviewItem.user.name.charAt(0).toUpperCase() : 'U' %>
                        </div>
                    </div>
                    <div>
                        <div class="flex items-center mb-1">
                            <h4 class="font-medium text-gray-900 mr-2"><%= reviewItem.user ? reviewItem.user.name : 'Anonymous' %></h4>
                            

                            <span class="text-xs text-gray-500"><%= new Date(reviewItem.createdAt).toLocaleDateString() %></span>
                        </div>
                        <div class="flex text-yellow-400 text-sm mb-2">
                            <% for(let i = 1; i <= 5; i++) { %>
                                <% if(i <= reviewItem.rating) { %>
                                    <i class="fas fa-star"></i>
                                <% } else { %>
                                    <i class="far fa-star"></i>
                                <% } %>
                            <% } %>
                        </div>
                        <p class="text-sm text-gray-700"><%= reviewItem.description %></p>
                    </div>
                </div>
            </div>
        <% }); %>
    <% } else { %>
        <div class="text-center py-8">
            <p class="text-gray-500">No reviews yet. Be the first to review this product!</p>
        </div>
    <% } %>
    
    <% if(review && review.length > 3) { %>
        <button class="mt-4 text-primary font-medium text-sm hover:text-primary/80 transition-colors duration-200">
            Load more reviews
        </button>
    <% } %>
</div>
            
            <!-- Shipping Tab (hidden by default) -->
            <div id="shipping" class="tab-content hidden">
                <div class="space-y-4">
                    <div>
                        <h3 class="text-lg font-semibold mb-2">Shipping Information</h3>
                        <p class="text-sm text-gray-600">We offer free shipping on all orders above ₹1000. Standard delivery takes 3-5 business days.</p>
                    </div>
                    <div>
                        <h3 class="text-lg font-semibold mb-2">Return Policy</h3>
                        <p class="text-sm text-gray-600">If you're not satisfied with your purchase, you can return it within 30 days for a full refund or exchange.</p>
                    </div>
                    <div>
                        <h3 class="text-lg font-semibold mb-2">Warranty</h3>
                        <p class="text-sm text-gray-600">This product comes with a 1-year manufacturer warranty covering defects in materials and workmanship.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

        <!-- Related Products Section -->
        <div class="mt-12">
            <h2 class="text-2xl font-bold text-gray-800 mb-6">Related Products</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <% relatedProducts.forEach(product => { %>
                    <div class="bg-white rounded-lg shadow-sm overflow-hidden group">
                        <div class="relative">
                            <a href="/productdetails/<%= product._id %>" class="block w-full h-full"> 
                                <img 
                                    src="/<%= product.mainImage %>" 
                                    alt="<%= product.productName %>" 
                                    class="w-full h-full object-contain object-center group-hover:scale-105 transition-transform duration-300"
                                >
                            </a>
                            <div class="absolute top-4 left-4">
                                <span class="bg-blue-500 text-white px-2 py-1 rounded-full text-sm font-semibold">
                                    <%= product.brands ? product.brands.name : 'No Brand' %>
                                </span>
                            </div>
                           <!-- Wishlist Button -->
            <button 
            onclick="addToWishlist('<%= product._id %>', this)" 
            class="absolute top-4 right-4 bg-white p-2 rounded-full shadow-md hover:bg-gray-100 transition-colors duration-200"
            aria-label="Add to wishlist"
        >
            <svg 
                xmlns="http://www.w3.org/2000/svg" 
                width="20" 
                height="20" 
                viewBox="0 0 24 24" 
                fill="none" 
                stroke="currentColor" 
                stroke-width="2" 
                stroke-linecap="round" 
                stroke-linejoin="round" 
                class="wishlist-icon text-gray-500 hover:text-red-500 transition-colors duration-200"
                data-product-id="<%= product._id %>"
            >
                <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
            </svg>
        </button>
                      
                        </div>
                        <div class="p-4">
                            <a href="/productdetails/<%= product._id %>" class="text-base font-medium text-gray-800 hover:text-blue-600 transition-colors line-clamp-2"> 
                                <h3 class="text-lg font-semibold mb-2"><%= product.productName %></h3>
                            </a>
                           
                            <div class="flex items-center mb-2">
                                <div class="flex text-yellow-400">
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star-half-alt"></i>
                                </div>
                                <span class="text-gray-500 text-sm ml-2">(4.5)</span>
                            </div>
                            <div class="flex items-center justify-between">
                                <span class="text-xl font-bold text-primary">₹<%= product.price %></span>
                                <button onclick="addToCart('<%= product._id %>')" 
                                    class="flex items-center justify-center gap-2 px-4 py-2 bg-primary text-white rounded-lg shadow-md hover:shadow-lg transform hover:-translate-y-1 transition-all duration-300 group">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transition-transform duration-300 group-hover:scale-110" fill="none" viewBox="0 0 24 24" stroke="currentColor">                 
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                                    </svg>             
                                    <span class="font-medium">Add to Cart</span>         
                                </button>
                            </div>
                        </div>
                    </div>
                <% }) %>
                <% if (relatedProducts.length === 0) { %>
                    <div class="col-span-full">
                        <div class="p-12 text-center bg-white rounded-xl shadow-sm border border-gray-100">
                            <svg 
                            xmlns="http://www.w3.org/2000/svg" 
                            width="20" 
                            height="20" 
                            viewBox="0 0 24 24" 
                            fill="none" 
                            stroke="currentColor" 
                            stroke-width="2" 
                            stroke-linecap="round" 
                            stroke-linejoin="round" 
                            class="wishlist-icon text-gray-500 hover:text-red-500 transition-colors duration-200"
                            data-product-id="<%= product._id %>"
                        >
                            <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                        </svg>
                            <p class="text-gray-500 text-lg mb-4">No related products found.</p>
                            <button onclick="window.location.href='/shoplist'" class="btn-primary flex items-center gap-2 mx-auto">
                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="m15 18-6-6 6-6"/>
                                </svg>
                                Back to All Products
                            </button>
                        </div>
                    </div>
                <% } %>
            </div>
        </div>
        
    </main>

    <!-- Toast Notification -->
<div id="toast" class="hidden fixed bottom-4 left-1/2 transform -translate-x-1/2 bg-gray-800 text-white px-4 py-2 rounded-lg shadow-lg">
    <span id="toast-message"></span>
</div>
    <!-- Footer -->
    <%- include('partials/footer') %>



    <script>
        function showToast(message, isError = false) {
            const toast = document.getElementById('toast');
            const toastMessage = document.getElementById('toast-message');

            toastMessage.textContent = message;
            toast.classList.remove('hidden');

            if (isError) {
                toast.classList.add('bg-red-500');
                toast.classList.remove('bg-gray-800');
            } else {
                toast.classList.remove('bg-red-500');
                toast.classList.add('bg-gray-800');
            }

            setTimeout(() => {
                toast.classList.add('hidden');
            }, 3000); // Hide after 3 seconds
        }

        function addToWishlist(productId, button) {
            // Get the SVG element inside the button
            const wishlistIcon = button.querySelector('.wishlist-icon');
            
            // Check if it's already in wishlist (has filled color)
            const isInWishlist = wishlistIcon.getAttribute('fill') === 'red';
            
            if (isInWishlist) {
                // Remove from wishlist
                fetch(`/wishlist/₹{productId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Update UI - change to unfilled heart
                        wishlistIcon.setAttribute('fill', 'none');
                        wishlistIcon.classList.remove('text-red-500');
                        wishlistIcon.classList.add('text-gray-500');
                        showToast('Product removed from wishlist!');
                    } else {
                        showToast(data.message, true);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('An error occurred.', true);
                });
            } else {
                // Add to wishlist - use your existing code
                fetch('/wishlist', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        productId
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Update UI - change to filled heart
                        wishlistIcon.setAttribute('fill', 'red');
                        wishlistIcon.setAttribute('stroke', 'red');
                        wishlistIcon.classList.remove('text-gray-500');
                        wishlistIcon.classList.add('text-red-500');
                        showToast('Product added to wishlist!');
                    } else {
                        showToast(data.message, true);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('An error occurred.', true);
                });
            }
        }

        // Initialize wishlist status on page load
        document.addEventListener('DOMContentLoaded', function() {
            // Check if user is logged in (has a token cookie)
            const token = document.cookie.includes('token=');
            if (!token) return;
            
            // Get all wishlist icons
            const wishlistIcons = document.querySelectorAll('.wishlist-icon');
            
            // Make a single request to get all wishlist items
            fetch('/wishlistStatus', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success && data.wishlistItems) {
                    // Update the icon colors for items in wishlist
                    wishlistIcons.forEach(icon => {
                        const productId = icon.dataset.productId;
                        if (data.wishlistItems.includes(productId)) {
                            icon.setAttribute('fill', 'red');
                            icon.setAttribute('stroke', 'red');
                            icon.classList.remove('text-gray-500');
                            icon.classList.add('text-red-500');
                        }
                    });
                }
            })
            .catch(error => {
                console.error('Error fetching wishlist status:', error);
            });
        });

        function addToCart(productId) {
            fetch('/addtocart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    productId: productId,
                    quantity: 1 // Default quantity
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast('Product added to cart!');
                } else {
                    showToast(data.message, true);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('An error occurred.', true);
            });
        }

        function updateMainImage(src, thumbnail) {
            // Update main image
            document.getElementById('mainImage').src = src;
            document.getElementById('zoomContainer').style.backgroundImage = "url(" + src + ")";
            
            // Update active thumbnail
            document.querySelectorAll('.thumbnail').forEach(el => {
                el.classList.remove('active');
            });
            if (thumbnail) {
                thumbnail.classList.add('active');
            }
        }

        const mainImage = document.getElementById('mainImage');
        const zoomWrapper = document.getElementById('zoomWrapper');
        const zoomContainer = document.getElementById('zoomContainer');

        mainImage.addEventListener('mouseenter', function(){
            zoomContainer.style.backgroundImage = "url(" + mainImage.src + ")";
            zoomWrapper.classList.remove('hidden');
        });

        mainImage.addEventListener('mousemove', function(e){
            const rect = mainImage.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const y = e.clientY - rect.top;
            const xPercent = (x / rect.width) * 100;
            const yPercent = (y / rect.height) * 100;
            zoomContainer.style.backgroundPosition = xPercent + "% " + yPercent + "%";
        });

        mainImage.addEventListener('mouseleave', function(){
            zoomWrapper.classList.add('hidden');
        });
        
        // Tab functionality
        function openTab(evt, tabName) {
            // Hide all tab content
            const tabContents = document.getElementsByClassName("tab-content");
            for (let i = 0; i < tabContents.length; i++) {
                tabContents[i].classList.add("hidden");
            }
            
            // Remove active class from all tab buttons
            const tabButtons = document.getElementsByClassName("tab-button");
            for (let i = 0; i < tabButtons.length; i++) {
                tabButtons[i].classList.remove("active");
            }
            
            // Show the selected tab content and mark button as active
            document.getElementById(tabName).classList.remove("hidden");
            evt.currentTarget.classList.add("active");
        }
    </script>
</body>
</html>
